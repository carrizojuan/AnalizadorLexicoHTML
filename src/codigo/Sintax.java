
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Wed Jul 01 16:41:50 ART 2020
//----------------------------------------------------

package codigo;

import java_cup.runtime.Symbol;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Wed Jul 01 16:41:50 ART 2020
  */
public class Sintax extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public Sintax() {super();}

  /** Constructor which sets the default scanner. */
  public Sintax(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public Sintax(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\u012e\000\002\002\004\000\002\003\005\000\002\002" +
    "\005\000\002\002\003\000\002\004\006\000\002\004\006" +
    "\000\002\005\004\000\002\005\003\000\002\006\004\000" +
    "\002\006\004\000\002\006\003\000\002\006\003\000\002" +
    "\007\005\000\002\007\007\000\002\010\005\000\002\010" +
    "\007\000\002\011\003\000\002\011\003\000\002\011\003" +
    "\000\002\011\003\000\002\011\003\000\002\011\003\000" +
    "\002\011\003\000\002\011\003\000\002\011\004\000\002" +
    "\011\004\000\002\011\003\000\002\011\003\000\002\011" +
    "\006\000\002\011\010\000\002\011\005\000\002\011\007" +
    "\000\002\011\006\000\002\011\010\000\002\011\005\000" +
    "\002\011\007\000\002\011\006\000\002\011\010\000\002" +
    "\011\005\000\002\011\007\000\002\011\004\000\002\011" +
    "\004\000\002\011\003\000\002\011\003\000\002\011\005" +
    "\000\002\011\006\000\002\035\002\000\002\032\005\000" +
    "\002\032\006\000\002\013\006\000\002\013\010\000\002" +
    "\013\005\000\002\013\007\000\002\013\006\000\002\013" +
    "\010\000\002\013\005\000\002\013\007\000\002\013\006" +
    "\000\002\013\010\000\002\013\005\000\002\013\007\000" +
    "\002\013\004\000\002\013\004\000\002\013\003\000\002" +
    "\013\003\000\002\013\005\000\002\013\006\000\002\023" +
    "\003\000\002\023\004\000\002\023\004\000\002\023\004" +
    "\000\002\023\004\000\002\023\005\000\002\023\005\000" +
    "\002\023\005\000\002\023\005\000\002\023\005\000\002" +
    "\023\005\000\002\023\004\000\002\023\005\000\002\023" +
    "\005\000\002\023\005\000\002\023\005\000\002\023\005" +
    "\000\002\023\005\000\002\023\006\000\002\023\004\000" +
    "\002\023\005\000\002\023\005\000\002\023\004\000\002" +
    "\023\005\000\002\023\005\000\002\023\005\000\002\023" +
    "\006\000\002\023\006\000\002\023\006\000\002\023\006" +
    "\000\002\023\004\000\002\023\005\000\002\023\005\000" +
    "\002\023\005\000\002\023\006\000\002\023\006\000\002" +
    "\023\006\000\002\023\006\000\002\031\004\000\002\031" +
    "\004\000\002\033\003\000\002\034\003\000\002\021\006" +
    "\000\002\021\010\000\002\021\005\000\002\021\007\000" +
    "\002\020\007\000\002\020\006\000\002\020\006\000\002" +
    "\020\005\000\002\015\005\000\002\015\006\000\002\015" +
    "\007\000\002\015\010\000\002\012\010\000\002\012\007" +
    "\000\002\012\006\000\002\012\005\000\002\014\010\000" +
    "\002\014\007\000\002\014\010\000\002\014\007\000\002" +
    "\014\010\000\002\014\007\000\002\014\010\000\002\014" +
    "\007\000\002\014\010\000\002\014\007\000\002\014\010" +
    "\000\002\014\007\000\002\014\006\000\002\014\005\000" +
    "\002\014\006\000\002\014\005\000\002\014\006\000\002" +
    "\014\005\000\002\014\006\000\002\014\005\000\002\014" +
    "\006\000\002\014\005\000\002\014\006\000\002\014\005" +
    "\000\002\017\011\000\002\017\010\000\002\017\010\000" +
    "\002\017\007\000\002\017\005\000\002\017\006\000\002" +
    "\017\010\000\002\017\007\000\002\017\010\000\002\017" +
    "\007\000\002\017\006\000\002\017\005\000\002\024\005" +
    "\000\002\024\006\000\002\024\007\000\002\024\010\000" +
    "\002\016\010\000\002\016\011\000\002\016\011\000\002" +
    "\016\012\000\002\016\011\000\002\016\012\000\002\016" +
    "\012\000\002\016\013\000\002\022\012\000\002\022\007" +
    "\000\002\022\013\000\002\022\010\000\002\022\012\000" +
    "\002\022\007\000\002\022\013\000\002\022\010\000\002" +
    "\022\011\000\002\022\006\000\002\022\012\000\002\022" +
    "\007\000\002\022\011\000\002\022\006\000\002\022\012" +
    "\000\002\022\007\000\002\022\012\000\002\022\013\000" +
    "\002\022\012\000\002\022\013\000\002\022\011\000\002" +
    "\022\012\000\002\022\011\000\002\022\012\000\002\022" +
    "\016\000\002\022\017\000\002\022\016\000\002\022\017" +
    "\000\002\022\015\000\002\022\016\000\002\022\015\000" +
    "\002\022\016\000\002\022\014\000\002\022\015\000\002" +
    "\022\014\000\002\022\015\000\002\022\025\000\002\022" +
    "\013\000\002\022\014\000\002\022\005\000\002\022\006" +
    "\000\002\022\010\000\002\022\011\000\002\022\007\000" +
    "\002\022\010\000\002\022\012\000\002\022\013\000\002" +
    "\022\007\000\002\022\012\000\002\022\010\000\002\022" +
    "\013\000\002\022\007\000\002\022\012\000\002\022\010" +
    "\000\002\022\013\000\002\022\006\000\002\022\011\000" +
    "\002\022\007\000\002\022\012\000\002\022\006\000\002" +
    "\022\011\000\002\022\007\000\002\022\012\000\002\022" +
    "\010\000\002\022\005\000\002\022\011\000\002\022\006" +
    "\000\002\022\011\000\002\022\014\000\002\022\012\000" +
    "\002\022\015\000\002\022\011\000\002\022\014\000\002" +
    "\022\012\000\002\022\015\000\002\022\010\000\002\022" +
    "\013\000\002\022\011\000\002\022\014\000\002\022\010" +
    "\000\002\022\013\000\002\022\011\000\002\022\014\000" +
    "\002\022\016\000\002\022\017\000\002\022\016\000\002" +
    "\022\017\000\002\022\015\000\002\022\016\000\002\022" +
    "\015\000\002\022\016\000\002\022\012\000\002\022\007" +
    "\000\002\022\013\000\002\022\010\000\002\022\014\000" +
    "\002\022\015\000\002\022\014\000\002\022\015\000\002" +
    "\022\013\000\002\022\014\000\002\022\013\000\002\022" +
    "\014\000\002\022\014\000\002\022\012\000\002\022\015" +
    "\000\002\022\013\000\002\025\005\000\002\025\007\000" +
    "\002\026\005\000\002\026\007\000\002\027\005\000\002" +
    "\027\007\000\002\037\006\000\002\037\005\000\002\037" +
    "\010\000\002\037\007\000\002\037\006\000\002\037\005" +
    "\000\002\037\010\000\002\037\007\000\002\030\006\000" +
    "\002\030\005\000\002\030\010\000\002\030\007\000\002" +
    "\036\003\000\002\036\003\000\002\036\004\000\002\036" +
    "\004" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u0275\000\004\014\004\001\002\000\006\015\uffd3\114" +
    "\011\001\002\000\004\002\006\001\002\000\004\002\001" +
    "\001\002\000\004\015\ufffe\001\002\000\004\015\u0277\001" +
    "\002\000\004\016\013\001\002\000\006\023\045\116\044" +
    "\001\002\000\010\013\015\021\016\115\020\001\002\000" +
    "\004\013\015\001\002\000\014\005\035\017\ufffa\020\037" +
    "\021\ufffa\115\ufffa\001\002\000\004\144\033\001\002\000" +
    "\006\021\016\115\020\001\002\000\006\152\023\153\022" +
    "\001\002\000\004\007\026\001\002\000\022\007\ufed6\107" +
    "\ufed6\110\ufed6\111\ufed6\112\ufed6\146\ufed6\150\ufed6\152\025" +
    "\001\002\000\022\007\ufed7\107\ufed7\110\ufed7\111\ufed7\112" +
    "\ufed7\146\ufed7\150\ufed7\153\024\001\002\000\020\007\ufed5" +
    "\107\ufed5\110\ufed5\111\ufed5\112\ufed5\146\ufed5\150\ufed5\001" +
    "\002\000\020\007\ufed4\107\ufed4\110\ufed4\111\ufed4\112\ufed4" +
    "\146\ufed4\150\ufed4\001\002\000\004\144\027\001\002\000" +
    "\004\022\030\001\002\000\006\013\ufff4\017\ufff4\001\002" +
    "\000\004\017\032\001\002\000\006\023\ufffd\116\ufffd\001" +
    "\002\000\004\022\034\001\002\000\006\013\ufff5\017\ufff5" +
    "\001\002\000\014\005\035\017\ufff6\020\037\021\ufff6\115" +
    "\ufff6\001\002\000\010\017\ufffb\021\ufffb\115\ufffb\001\002" +
    "\000\014\005\035\017\ufff7\020\037\021\ufff7\115\ufff7\001" +
    "\002\000\010\017\ufff9\021\ufff9\115\ufff9\001\002\000\010" +
    "\017\ufff8\021\ufff8\115\ufff8\001\002\000\004\017\043\001" +
    "\002\000\006\023\ufffc\116\ufffc\001\002\000\006\152\023" +
    "\153\022\001\002\000\116\004\070\006\110\010\107\012" +
    "\105\025\050\026\121\030\076\031\115\033\100\035\066" +
    "\037\112\040\101\042\054\044\065\046\064\050\063\052" +
    "\061\054\060\056\056\060\073\062\074\066\103\067\116" +
    "\117\047\120\120\121\055\122\051\123\102\124\052\125" +
    "\106\126\062\127\114\130\075\131\104\133\067\143\122" +
    "\144\123\145\071\001\002\000\004\015\uffff\001\002\000" +
    "\006\152\023\153\022\001\002\000\136\004\070\006\110" +
    "\010\107\011\uffe7\012\105\024\uffe7\025\050\026\121\027" +
    "\uffe7\030\076\031\115\033\100\035\066\037\112\040\101" +
    "\041\uffe7\042\054\043\uffe7\044\065\046\064\050\063\052" +
    "\061\054\060\056\056\060\073\062\074\065\uffe7\066\103" +
    "\067\116\102\uffe7\104\uffe7\117\047\120\120\121\055\122" +
    "\051\123\102\124\052\125\106\126\062\127\114\130\075" +
    "\131\104\133\067\143\122\144\123\145\071\001\002\000" +
    "\006\152\023\153\022\001\002\000\006\152\023\153\022" +
    "\001\002\000\022\011\uffec\024\uffec\027\uffec\041\uffec\043" +
    "\uffec\065\uffec\102\uffec\104\uffec\001\002\000\116\004\070" +
    "\006\110\010\107\012\105\025\050\026\121\030\076\031" +
    "\115\033\100\035\066\037\112\040\101\042\054\044\065" +
    "\046\064\050\063\052\061\054\060\056\056\060\073\062" +
    "\074\066\103\067\116\117\047\120\120\121\055\122\051" +
    "\123\102\124\052\125\106\126\062\127\114\130\075\131" +
    "\104\133\067\143\122\144\123\145\071\001\002\000\006" +
    "\152\023\153\022\001\002\000\004\144\u0258\001\002\000" +
    "\004\024\u0257\001\002\000\004\144\u0254\001\002\000\004" +
    "\144\u0251\001\002\000\006\152\023\153\022\001\002\000" +
    "\004\144\u0249\001\002\000\004\144\u0246\001\002\000\004" +
    "\144\u0243\001\002\000\006\031\235\144\u023d\001\002\000" +
    "\006\152\023\153\022\001\002\000\006\152\023\153\022" +
    "\001\002\000\006\152\023\153\022\001\002\000\022\011" +
    "\uffea\024\uffea\027\uffea\041\uffea\043\uffea\065\uffea\102\uffea" +
    "\104\uffea\001\002\000\006\064\u016d\132\u016b\001\002\000" +
    "\006\064\u016d\132\u016b\001\002\000\010\146\u01d0\152\023" +
    "\153\022\001\002\000\136\004\070\006\110\010\107\011" +
    "\uffe6\012\105\024\uffe6\025\050\026\121\027\uffe6\030\076" +
    "\031\115\033\100\035\066\037\112\040\101\041\uffe6\042" +
    "\054\043\uffe6\044\065\046\064\050\063\052\061\054\060" +
    "\056\056\060\073\062\074\065\uffe6\066\103\067\116\102" +
    "\uffe6\104\uffe6\117\047\120\120\121\055\122\051\123\102" +
    "\124\052\125\106\126\062\127\114\130\075\131\104\133" +
    "\067\143\122\144\123\145\071\001\002\000\022\011\uffeb" +
    "\024\uffeb\027\uffeb\041\uffeb\043\uffeb\065\uffeb\102\uffeb\104" +
    "\uffeb\001\002\000\004\144\u01cb\001\002\000\116\004\070" +
    "\006\110\010\107\012\105\025\050\026\121\030\076\031" +
    "\115\033\100\035\066\037\112\040\101\042\054\044\065" +
    "\046\064\050\063\052\061\054\060\056\056\060\073\062" +
    "\074\066\103\067\116\117\047\120\120\121\055\122\051" +
    "\123\102\124\052\125\106\126\062\127\114\130\075\131" +
    "\104\133\067\143\122\144\123\145\071\001\002\000\006" +
    "\152\023\153\022\001\002\000\016\071\u0178\073\144\105" +
    "\153\134\u017b\135\150\142\145\001\002\000\006\152\023" +
    "\153\022\001\002\000\016\107\u012a\110\u012e\111\u0131\112" +
    "\u0130\152\023\153\022\001\002\000\006\152\023\153\022" +
    "\001\002\000\010\150\u010f\152\023\153\022\001\002\000" +
    "\136\004\070\006\110\010\107\011\uffd7\012\105\024\uffd7" +
    "\025\050\026\121\027\uffd7\030\076\031\115\033\100\035" +
    "\066\037\112\040\101\041\uffd7\042\054\043\uffd7\044\065" +
    "\046\064\050\063\052\061\054\060\056\056\060\073\062" +
    "\074\065\uffd7\066\103\067\116\102\uffd7\104\uffd7\117\047" +
    "\120\120\121\055\122\051\123\102\124\052\125\106\126" +
    "\062\127\114\130\075\131\104\133\067\143\122\144\123" +
    "\145\071\001\002\000\022\011\ufff1\024\ufff1\027\ufff1\041" +
    "\ufff1\043\ufff1\065\ufff1\102\ufff1\104\ufff1\001\002\000\006" +
    "\152\023\153\022\001\002\000\022\011\ufff0\024\ufff0\027" +
    "\ufff0\041\ufff0\043\ufff0\065\ufff0\102\ufff0\104\ufff0\001\002" +
    "\000\006\152\023\153\022\001\002\000\004\144\u0100\001" +
    "\002\000\016\071\147\073\144\105\153\134\152\135\150" +
    "\142\145\001\002\000\022\011\uffed\024\uffed\027\uffed\041" +
    "\uffed\043\uffed\065\uffed\102\uffed\104\uffed\001\002\000\006" +
    "\152\023\153\022\001\002\000\116\004\070\006\110\010" +
    "\107\012\105\025\050\026\121\030\076\031\115\033\100" +
    "\035\066\037\112\040\101\042\054\044\065\046\064\050" +
    "\063\052\061\054\060\056\056\060\073\062\074\066\103" +
    "\067\116\117\047\120\120\121\055\122\051\123\102\124" +
    "\052\125\106\126\062\127\114\130\075\131\104\133\067" +
    "\143\122\144\123\145\071\001\002\000\006\152\023\153" +
    "\022\001\002\000\136\004\070\006\110\010\107\011\uffd6" +
    "\012\105\024\uffd6\025\050\026\121\027\uffd6\030\076\031" +
    "\115\033\100\035\066\037\112\040\101\041\uffd6\042\054" +
    "\043\uffd6\044\065\046\064\050\063\052\061\054\060\056" +
    "\056\060\073\062\074\065\uffd6\066\103\067\116\102\uffd6" +
    "\104\uffd6\117\047\120\120\121\055\122\051\123\102\124" +
    "\052\125\106\126\062\127\114\130\075\131\104\133\067" +
    "\143\122\144\123\145\071\001\002\000\022\011\uffee\024" +
    "\uffee\027\uffee\041\uffee\043\uffee\065\uffee\102\uffee\104\uffee" +
    "\001\002\000\022\011\uffef\024\uffef\027\uffef\041\uffef\043" +
    "\uffef\065\uffef\102\uffef\104\uffef\001\002\000\022\011\uffd8" +
    "\024\uffd8\027\uffd8\041\uffd8\043\uffd8\065\uffd8\102\uffd8\104" +
    "\uffd8\001\002\000\004\007\130\001\002\000\116\004\070" +
    "\006\110\010\107\012\105\025\050\026\121\030\076\031" +
    "\115\033\100\035\066\037\112\040\101\042\054\044\065" +
    "\046\064\050\063\052\061\054\060\056\056\060\073\062" +
    "\074\066\103\067\116\117\047\120\120\121\055\122\051" +
    "\123\102\124\052\125\106\126\062\127\114\130\075\131" +
    "\104\133\067\143\122\144\123\145\071\001\002\000\004" +
    "\043\132\001\002\000\136\004\070\006\110\010\107\011" +
    "\uff8a\012\105\024\uff8a\025\050\026\121\027\uff8a\030\076" +
    "\031\115\033\100\035\066\037\112\040\101\041\uff8a\042" +
    "\054\043\uff8a\044\065\046\064\050\063\052\061\054\060" +
    "\056\056\060\073\062\074\065\uff8a\066\103\067\116\102" +
    "\uff8a\104\uff8a\117\047\120\120\121\055\122\051\123\102" +
    "\124\052\125\106\126\062\127\114\130\075\131\104\133" +
    "\067\143\122\144\123\145\071\001\002\000\022\011\uff89" +
    "\024\uff89\027\uff89\041\uff89\043\uff89\065\uff89\102\uff89\104" +
    "\uff89\001\002\000\004\027\135\001\002\000\136\004\070" +
    "\006\110\010\107\011\uff85\012\105\024\uff85\025\050\026" +
    "\121\027\uff85\030\076\031\115\033\100\035\066\037\112" +
    "\040\101\041\uff85\042\054\043\uff85\044\065\046\064\050" +
    "\063\052\061\054\060\056\056\060\073\062\074\065\uff85" +
    "\066\103\067\116\102\uff85\104\uff85\117\047\120\120\121" +
    "\055\122\051\123\102\124\052\125\106\126\062\127\114" +
    "\130\075\131\104\133\067\143\122\144\123\145\071\001" +
    "\002\000\022\011\uff86\024\uff86\027\uff86\041\uff86\043\uff86" +
    "\065\uff86\102\uff86\104\uff86\001\002\000\004\007\140\001" +
    "\002\000\116\004\070\006\110\010\107\012\105\025\050" +
    "\026\121\030\076\031\115\033\100\035\066\037\112\040" +
    "\101\042\054\044\065\046\064\050\063\052\061\054\060" +
    "\056\056\060\073\062\074\066\103\067\116\117\047\120" +
    "\120\121\055\122\051\123\102\124\052\125\106\126\062" +
    "\127\114\130\075\131\104\133\067\143\122\144\123\145" +
    "\071\001\002\000\004\041\142\001\002\000\136\004\070" +
    "\006\110\010\107\011\uff91\012\105\024\uff91\025\050\026" +
    "\121\027\uff91\030\076\031\115\033\100\035\066\037\112" +
    "\040\101\041\uff91\042\054\043\uff91\044\065\046\064\050" +
    "\063\052\061\054\060\056\056\060\073\062\074\065\uff91" +
    "\066\103\067\116\102\uff91\104\uff91\117\047\120\120\121" +
    "\055\122\051\123\102\124\052\125\106\126\062\127\114" +
    "\130\075\131\104\133\067\143\122\144\123\145\071\001" +
    "\002\000\022\011\uff93\024\uff93\027\uff93\041\uff93\043\uff93" +
    "\065\uff93\102\uff93\104\uff93\001\002\000\006\105\153\142" +
    "\145\001\002\000\006\152\023\153\022\001\002\000\004" +
    "\070\367\001\002\000\022\006\212\031\213\033\205\035" +
    "\211\037\210\117\214\121\215\144\207\001\002\000\006" +
    "\152\023\153\022\001\002\000\012\075\271\077\270\136" +
    "\267\137\266\001\002\000\006\152\023\153\022\001\002" +
    "\000\012\101\154\103\157\140\155\141\160\001\002\000" +
    "\116\004\070\006\110\010\107\012\105\025\050\026\121" +
    "\030\076\031\115\033\100\035\066\037\112\040\101\042" +
    "\054\044\065\046\064\050\063\052\061\054\060\056\056" +
    "\060\073\062\074\066\103\067\116\117\047\120\120\121" +
    "\055\122\051\123\102\124\052\125\106\126\062\127\114" +
    "\130\075\131\104\133\067\143\122\144\123\145\071\001" +
    "\002\000\006\152\023\153\022\001\002\000\004\106\171" +
    "\001\002\000\116\004\070\006\110\010\107\012\105\025" +
    "\050\026\121\030\076\031\115\033\100\035\066\037\112" +
    "\040\101\042\054\044\065\046\064\050\063\052\061\054" +
    "\060\056\056\060\073\062\074\066\103\067\116\117\047" +
    "\120\120\121\055\122\051\123\102\124\052\125\106\126" +
    "\062\127\114\130\075\131\104\133\067\143\122\144\123" +
    "\145\071\001\002\000\006\152\023\153\022\001\002\000" +
    "\004\007\162\001\002\000\116\004\070\006\110\010\107" +
    "\012\105\025\050\026\121\030\076\031\115\033\100\035" +
    "\066\037\112\040\101\042\054\044\065\046\064\050\063" +
    "\052\061\054\060\056\056\060\073\062\074\066\103\067" +
    "\116\117\047\120\120\121\055\122\051\123\102\124\052" +
    "\125\106\126\062\127\114\130\075\131\104\133\067\143" +
    "\122\144\123\145\071\001\002\000\004\104\164\001\002" +
    "\000\014\101\154\103\157\106\ufedc\140\155\141\160\001" +
    "\002\000\004\106\ufedd\001\002\000\004\104\167\001\002" +
    "\000\014\101\154\103\157\106\ufede\140\155\141\160\001" +
    "\002\000\004\106\ufedf\001\002\000\016\070\ufeda\074\ufeda" +
    "\076\ufeda\100\ufeda\105\153\142\145\001\002\000\012\070" +
    "\ufedb\074\ufedb\076\ufedb\100\ufedb\001\002\000\004\007\174" +
    "\001\002\000\116\004\070\006\110\010\107\012\105\025" +
    "\050\026\121\030\076\031\115\033\100\035\066\037\112" +
    "\040\101\042\054\044\065\046\064\050\063\052\061\054" +
    "\060\056\056\060\073\062\074\066\103\067\116\117\047" +
    "\120\120\121\055\122\051\123\102\124\052\125\106\126" +
    "\062\127\114\130\075\131\104\133\067\143\122\144\123" +
    "\145\071\001\002\000\004\102\176\001\002\000\014\101" +
    "\154\103\157\106\ufee0\140\155\141\160\001\002\000\004" +
    "\106\ufee1\001\002\000\004\102\201\001\002\000\014\101" +
    "\154\103\157\106\ufee2\140\155\141\160\001\002\000\004" +
    "\106\ufee3\001\002\000\004\007\204\001\002\000\022\006" +
    "\212\031\213\033\205\035\211\037\210\117\214\121\215" +
    "\144\207\001\002\000\004\144\322\001\002\000\004\072" +
    "\254\001\002\000\024\006\212\031\213\033\205\035\211" +
    "\037\210\072\uffc1\117\214\121\215\144\207\001\002\000" +
    "\006\152\023\153\022\001\002\000\006\031\235\144\234" +
    "\001\002\000\024\006\212\031\213\033\205\035\211\037" +
    "\210\072\uffc2\117\214\121\215\144\207\001\002\000\004" +
    "\144\230\001\002\000\006\152\023\153\022\001\002\000" +
    "\006\152\023\153\022\001\002\000\004\007\217\001\002" +
    "\000\004\144\220\001\002\000\004\034\221\001\002\000" +
    "\024\006\212\031\213\033\205\035\211\037\210\072\uffc9" +
    "\117\214\121\215\144\207\001\002\000\004\072\uffcb\001" +
    "\002\000\004\007\224\001\002\000\004\144\225\001\002" +
    "\000\004\032\226\001\002\000\024\006\212\031\213\033" +
    "\205\035\211\037\210\072\uffcd\117\214\121\215\144\207" +
    "\001\002\000\004\072\uffcf\001\002\000\004\032\231\001" +
    "\002\000\024\006\212\031\213\033\205\035\211\037\210" +
    "\072\uffce\117\214\121\215\144\207\001\002\000\004\072" +
    "\uffd0\001\002\000\004\072\uffc4\001\002\000\004\036\244" +
    "\001\002\000\004\144\241\001\002\000\004\036\237\001" +
    "\002\000\024\006\212\031\213\033\205\035\211\037\210" +
    "\072\uffc0\117\214\121\215\144\207\001\002\000\004\072" +
    "\uffbf\001\002\000\004\032\242\001\002\000\006\031\235" +
    "\036\uffd2\001\002\000\004\036\uffd1\001\002\000\024\006" +
    "\212\031\213\033\205\035\211\037\210\072\uffc6\117\214" +
    "\121\215\144\207\001\002\000\004\072\uffc8\001\002\000" +
    "\004\007\247\001\002\000\004\144\250\001\002\000\004" +
    "\036\251\001\002\000\024\006\212\031\213\033\205\035" +
    "\211\037\210\072\uffc5\117\214\121\215\144\207\001\002" +
    "\000\004\072\uffc7\001\002\000\004\072\uffc3\001\002\000" +
    "\032\006\212\031\213\033\205\035\211\037\210\073\144" +
    "\105\153\117\214\121\215\135\150\142\145\144\207\001" +
    "\002\000\012\075\271\077\270\136\267\137\266\001\002" +
    "\000\004\072\262\001\002\000\004\070\260\001\002\000" +
    "\136\004\070\006\110\010\107\011\ufeec\012\105\024\ufeec" +
    "\025\050\026\121\027\ufeec\030\076\031\115\033\100\035" +
    "\066\037\112\040\101\041\ufeec\042\054\043\ufeec\044\065" +
    "\046\064\050\063\052\061\054\060\056\056\060\073\062" +
    "\074\065\ufeec\066\103\067\116\102\ufeec\104\ufeec\117\047" +
    "\120\120\121\055\122\051\123\102\124\052\125\106\126" +
    "\062\127\114\130\075\131\104\133\067\143\122\144\123" +
    "\145\071\001\002\000\022\011\ufeea\024\ufeea\027\ufeea\041" +
    "\ufeea\043\ufeea\065\ufeea\102\ufeea\104\ufeea\001\002\000\006" +
    "\105\153\142\145\001\002\000\004\070\264\001\002\000" +
    "\136\004\070\006\110\010\107\011\ufeed\012\105\024\ufeed" +
    "\025\050\026\121\027\ufeed\030\076\031\115\033\100\035" +
    "\066\037\112\040\101\041\ufeed\042\054\043\ufeed\044\065" +
    "\046\064\050\063\052\061\054\060\056\056\060\073\062" +
    "\074\065\ufeed\066\103\067\116\102\ufeed\104\ufeed\117\047" +
    "\120\120\121\055\122\051\123\102\124\052\125\106\126" +
    "\062\127\114\130\075\131\104\133\067\143\122\144\123" +
    "\145\071\001\002\000\022\011\ufeeb\024\ufeeb\027\ufeeb\041" +
    "\ufeeb\043\ufeeb\065\ufeeb\102\ufeeb\104\ufeeb\001\002\000\006" +
    "\152\023\153\022\001\002\000\006\152\023\153\022\001" +
    "\002\000\006\105\153\142\145\001\002\000\006\105\153" +
    "\142\145\001\002\000\010\070\301\077\270\137\266\001" +
    "\002\000\010\070\274\075\271\136\267\001\002\000\136" +
    "\004\070\006\110\010\107\011\ufeef\012\105\024\ufeef\025" +
    "\050\026\121\027\ufeef\030\076\031\115\033\100\035\066" +
    "\037\112\040\101\041\ufeef\042\054\043\ufeef\044\065\046" +
    "\064\050\063\052\061\054\060\056\056\060\073\062\074" +
    "\065\ufeef\066\103\067\116\102\ufeef\104\ufeef\117\047\120" +
    "\120\121\055\122\051\123\102\124\052\125\106\126\062" +
    "\127\114\130\075\131\104\133\067\143\122\144\123\145" +
    "\071\001\002\000\004\070\276\001\002\000\136\004\070" +
    "\006\110\010\107\011\ufef3\012\105\024\ufef3\025\050\026" +
    "\121\027\ufef3\030\076\031\115\033\100\035\066\037\112" +
    "\040\101\041\ufef3\042\054\043\ufef3\044\065\046\064\050" +
    "\063\052\061\054\060\056\056\060\073\062\074\065\ufef3" +
    "\066\103\067\116\102\ufef3\104\ufef3\117\047\120\120\121" +
    "\055\122\051\123\102\124\052\125\106\126\062\127\114" +
    "\130\075\131\104\133\067\143\122\144\123\145\071\001" +
    "\002\000\022\011\ufef2\024\ufef2\027\ufef2\041\ufef2\043\ufef2" +
    "\065\ufef2\102\ufef2\104\ufef2\001\002\000\022\011\ufeee\024" +
    "\ufeee\027\ufeee\041\ufeee\043\ufeee\065\ufeee\102\ufeee\104\ufeee" +
    "\001\002\000\136\004\070\006\110\010\107\011\ufef1\012" +
    "\105\024\ufef1\025\050\026\121\027\ufef1\030\076\031\115" +
    "\033\100\035\066\037\112\040\101\041\ufef1\042\054\043" +
    "\ufef1\044\065\046\064\050\063\052\061\054\060\056\056" +
    "\060\073\062\074\065\ufef1\066\103\067\116\102\ufef1\104" +
    "\ufef1\117\047\120\120\121\055\122\051\123\102\124\052" +
    "\125\106\126\062\127\114\130\075\131\104\133\067\143" +
    "\122\144\123\145\071\001\002\000\004\070\303\001\002" +
    "\000\136\004\070\006\110\010\107\011\ufef5\012\105\024" +
    "\ufef5\025\050\026\121\027\ufef5\030\076\031\115\033\100" +
    "\035\066\037\112\040\101\041\ufef5\042\054\043\ufef5\044" +
    "\065\046\064\050\063\052\061\054\060\056\056\060\073" +
    "\062\074\065\ufef5\066\103\067\116\102\ufef5\104\ufef5\117" +
    "\047\120\120\121\055\122\051\123\102\124\052\125\106" +
    "\126\062\127\114\130\075\131\104\133\067\143\122\144" +
    "\123\145\071\001\002\000\022\011\ufef4\024\ufef4\027\ufef4" +
    "\041\ufef4\043\ufef4\065\ufef4\102\ufef4\104\ufef4\001\002\000" +
    "\022\011\ufef0\024\ufef0\027\ufef0\041\ufef0\043\ufef0\065\ufef0" +
    "\102\ufef0\104\ufef0\001\002\000\004\076\307\001\002\000" +
    "\010\070\ufee7\077\ufee7\137\ufee7\001\002\000\004\100\311" +
    "\001\002\000\010\070\ufee5\075\ufee5\136\ufee5\001\002\000" +
    "\004\007\313\001\002\000\006\105\153\142\145\001\002" +
    "\000\004\076\315\001\002\000\010\070\ufee6\077\ufee6\137" +
    "\ufee6\001\002\000\004\007\317\001\002\000\006\105\153" +
    "\142\145\001\002\000\004\100\321\001\002\000\010\070" +
    "\ufee4\075\ufee4\136\ufee4\001\002\000\004\034\323\001\002" +
    "\000\024\006\212\031\213\033\205\035\211\037\210\072" +
    "\uffca\117\214\121\215\144\207\001\002\000\004\072\uffcc" +
    "\001\002\000\010\070\334\077\270\137\266\001\002\000" +
    "\010\070\327\075\271\136\267\001\002\000\136\004\070" +
    "\006\110\010\107\011\uff19\012\105\024\uff19\025\050\026" +
    "\121\027\uff19\030\076\031\115\033\100\035\066\037\112" +
    "\040\101\041\uff19\042\054\043\uff19\044\065\046\064\050" +
    "\063\052\061\054\060\056\056\060\073\062\074\065\uff19" +
    "\066\103\067\116\102\uff19\104\uff19\117\047\120\120\121" +
    "\055\122\051\123\102\124\052\125\106\126\062\127\114" +
    "\130\075\131\104\133\067\143\122\144\123\145\071\001" +
    "\002\000\004\070\331\001\002\000\136\004\070\006\110" +
    "\010\107\011\uff21\012\105\024\uff21\025\050\026\121\027" +
    "\uff21\030\076\031\115\033\100\035\066\037\112\040\101" +
    "\041\uff21\042\054\043\uff21\044\065\046\064\050\063\052" +
    "\061\054\060\056\056\060\073\062\074\065\uff21\066\103" +
    "\067\116\102\uff21\104\uff21\117\047\120\120\121\055\122" +
    "\051\123\102\124\052\125\106\126\062\127\114\130\075" +
    "\131\104\133\067\143\122\144\123\145\071\001\002\000" +
    "\022\011\uff1f\024\uff1f\027\uff1f\041\uff1f\043\uff1f\065\uff1f" +
    "\102\uff1f\104\uff1f\001\002\000\022\011\uff17\024\uff17\027" +
    "\uff17\041\uff17\043\uff17\065\uff17\102\uff17\104\uff17\001\002" +
    "\000\136\004\070\006\110\010\107\011\uff1d\012\105\024" +
    "\uff1d\025\050\026\121\027\uff1d\030\076\031\115\033\100" +
    "\035\066\037\112\040\101\041\uff1d\042\054\043\uff1d\044" +
    "\065\046\064\050\063\052\061\054\060\056\056\060\073" +
    "\062\074\065\uff1d\066\103\067\116\102\uff1d\104\uff1d\117" +
    "\047\120\120\121\055\122\051\123\102\124\052\125\106" +
    "\126\062\127\114\130\075\131\104\133\067\143\122\144" +
    "\123\145\071\001\002\000\004\070\336\001\002\000\136" +
    "\004\070\006\110\010\107\011\uff25\012\105\024\uff25\025" +
    "\050\026\121\027\uff25\030\076\031\115\033\100\035\066" +
    "\037\112\040\101\041\uff25\042\054\043\uff25\044\065\046" +
    "\064\050\063\052\061\054\060\056\056\060\073\062\074" +
    "\065\uff25\066\103\067\116\102\uff25\104\uff25\117\047\120" +
    "\120\121\055\122\051\123\102\124\052\125\106\126\062" +
    "\127\114\130\075\131\104\133\067\143\122\144\123\145" +
    "\071\001\002\000\022\011\uff23\024\uff23\027\uff23\041\uff23" +
    "\043\uff23\065\uff23\102\uff23\104\uff23\001\002\000\022\011" +
    "\uff1b\024\uff1b\027\uff1b\041\uff1b\043\uff1b\065\uff1b\102\uff1b" +
    "\104\uff1b\001\002\000\004\007\342\001\002\000\006\105" +
    "\153\142\145\001\002\000\004\074\344\001\002\000\012" +
    "\075\ufee8\077\ufee8\136\ufee8\137\ufee8\001\002\000\004\072" +
    "\346\001\002\000\012\073\144\105\153\135\150\142\145" +
    "\001\002\000\004\070\365\001\002\000\012\075\271\077" +
    "\270\136\267\137\266\001\002\000\010\070\360\077\270" +
    "\137\266\001\002\000\010\070\353\075\271\136\267\001" +
    "\002\000\136\004\070\006\110\010\107\011\uff18\012\105" +
    "\024\uff18\025\050\026\121\027\uff18\030\076\031\115\033" +
    "\100\035\066\037\112\040\101\041\uff18\042\054\043\uff18" +
    "\044\065\046\064\050\063\052\061\054\060\056\056\060" +
    "\073\062\074\065\uff18\066\103\067\116\102\uff18\104\uff18" +
    "\117\047\120\120\121\055\122\051\123\102\124\052\125" +
    "\106\126\062\127\114\130\075\131\104\133\067\143\122" +
    "\144\123\145\071\001\002\000\004\070\355\001\002\000" +
    "\136\004\070\006\110\010\107\011\uff20\012\105\024\uff20" +
    "\025\050\026\121\027\uff20\030\076\031\115\033\100\035" +
    "\066\037\112\040\101\041\uff20\042\054\043\uff20\044\065" +
    "\046\064\050\063\052\061\054\060\056\056\060\073\062" +
    "\074\065\uff20\066\103\067\116\102\uff20\104\uff20\117\047" +
    "\120\120\121\055\122\051\123\102\124\052\125\106\126" +
    "\062\127\114\130\075\131\104\133\067\143\122\144\123" +
    "\145\071\001\002\000\022\011\uff1e\024\uff1e\027\uff1e\041" +
    "\uff1e\043\uff1e\065\uff1e\102\uff1e\104\uff1e\001\002\000\022" +
    "\011\uff16\024\uff16\027\uff16\041\uff16\043\uff16\065\uff16\102" +
    "\uff16\104\uff16\001\002\000\136\004\070\006\110\010\107" +
    "\011\uff1c\012\105\024\uff1c\025\050\026\121\027\uff1c\030" +
    "\076\031\115\033\100\035\066\037\112\040\101\041\uff1c" +
    "\042\054\043\uff1c\044\065\046\064\050\063\052\061\054" +
    "\060\056\056\060\073\062\074\065\uff1c\066\103\067\116" +
    "\102\uff1c\104\uff1c\117\047\120\120\121\055\122\051\123" +
    "\102\124\052\125\106\126\062\127\114\130\075\131\104" +
    "\133\067\143\122\144\123\145\071\001\002\000\004\070" +
    "\362\001\002\000\136\004\070\006\110\010\107\011\uff24" +
    "\012\105\024\uff24\025\050\026\121\027\uff24\030\076\031" +
    "\115\033\100\035\066\037\112\040\101\041\uff24\042\054" +
    "\043\uff24\044\065\046\064\050\063\052\061\054\060\056" +
    "\056\060\073\062\074\065\uff24\066\103\067\116\102\uff24" +
    "\104\uff24\117\047\120\120\121\055\122\051\123\102\124" +
    "\052\125\106\126\062\127\114\130\075\131\104\133\067" +
    "\143\122\144\123\145\071\001\002\000\022\011\uff22\024" +
    "\uff22\027\uff22\041\uff22\043\uff22\065\uff22\102\uff22\104\uff22" +
    "\001\002\000\022\011\uff1a\024\uff1a\027\uff1a\041\uff1a\043" +
    "\uff1a\065\uff1a\102\uff1a\104\uff1a\001\002\000\136\004\070" +
    "\006\110\010\107\011\uff15\012\105\024\uff15\025\050\026" +
    "\121\027\uff15\030\076\031\115\033\100\035\066\037\112" +
    "\040\101\041\uff15\042\054\043\uff15\044\065\046\064\050" +
    "\063\052\061\054\060\056\056\060\073\062\074\065\uff15" +
    "\066\103\067\116\102\uff15\104\uff15\117\047\120\120\121" +
    "\055\122\051\123\102\124\052\125\106\126\062\127\114" +
    "\130\075\131\104\133\067\143\122\144\123\145\071\001" +
    "\002\000\022\011\uff13\024\uff13\027\uff13\041\uff13\043\uff13" +
    "\065\uff13\102\uff13\104\uff13\001\002\000\136\004\070\006" +
    "\110\010\107\011\uff14\012\105\024\uff14\025\050\026\121" +
    "\027\uff14\030\076\031\115\033\100\035\066\037\112\040" +
    "\101\041\uff14\042\054\043\uff14\044\065\046\064\050\063" +
    "\052\061\054\060\056\056\060\073\062\074\065\uff14\066" +
    "\103\067\116\102\uff14\104\uff14\117\047\120\120\121\055" +
    "\122\051\123\102\124\052\125\106\126\062\127\114\130" +
    "\075\131\104\133\067\143\122\144\123\145\071\001\002" +
    "\000\022\011\uff12\024\uff12\027\uff12\041\uff12\043\uff12\065" +
    "\uff12\102\uff12\104\uff12\001\002\000\004\007\372\001\002" +
    "\000\012\101\154\103\157\140\155\141\160\001\002\000" +
    "\004\106\374\001\002\000\016\070\ufed8\074\ufed8\076\ufed8" +
    "\100\ufed8\105\153\142\145\001\002\000\012\070\ufed9\074" +
    "\ufed9\076\ufed9\100\ufed9\001\002\000\004\074\377\001\002" +
    "\000\012\075\ufee9\077\ufee9\136\ufee9\137\ufee9\001\002\000" +
    "\004\032\u0101\001\002\000\136\004\070\006\110\010\107" +
    "\011\uffe3\012\105\024\uffe3\025\050\026\121\027\uffe3\030" +
    "\076\031\115\033\100\035\066\037\112\040\101\041\uffe3" +
    "\042\054\043\uffe3\044\065\046\064\050\063\052\061\054" +
    "\060\056\056\060\073\062\074\065\uffe3\066\103\067\116" +
    "\102\uffe3\104\uffe3\117\047\120\120\121\055\122\051\123" +
    "\102\124\052\125\106\126\062\127\114\130\075\131\104" +
    "\133\067\143\122\144\123\145\071\001\002\000\022\011" +
    "\uffe5\024\uffe5\027\uffe5\041\uffe5\043\uffe5\065\uffe5\102\uffe5" +
    "\104\uffe5\001\002\000\004\007\u0104\001\002\000\004\144" +
    "\u0105\001\002\000\004\057\u0106\001\002\000\136\004\070" +
    "\006\110\010\107\011\uff79\012\105\024\uff79\025\050\026" +
    "\121\027\uff79\030\076\031\115\033\100\035\066\037\112" +
    "\040\101\041\uff79\042\054\043\uff79\044\065\046\064\050" +
    "\063\052\061\054\060\056\056\060\073\062\074\065\uff79" +
    "\066\103\067\116\102\uff79\104\uff79\117\047\120\120\121" +
    "\055\122\051\123\102\124\052\125\106\126\062\127\114" +
    "\130\075\131\104\133\067\143\122\144\123\145\071\001" +
    "\002\000\022\011\uff7a\024\uff7a\027\uff7a\041\uff7a\043\uff7a" +
    "\065\uff7a\102\uff7a\104\uff7a\001\002\000\004\007\u0109\001" +
    "\002\000\004\144\u010a\001\002\000\004\036\u010b\001\002" +
    "\000\136\004\070\006\110\010\107\011\uffda\012\105\024" +
    "\uffda\025\050\026\121\027\uffda\030\076\031\115\033\100" +
    "\035\066\037\112\040\101\041\uffda\042\054\043\uffda\044" +
    "\065\046\064\050\063\052\061\054\060\056\056\060\073" +
    "\062\074\065\uffda\066\103\067\116\102\uffda\104\uffda\117" +
    "\047\120\120\121\055\122\051\123\102\124\052\125\106" +
    "\126\062\127\114\130\075\131\104\133\067\143\122\144" +
    "\123\145\071\001\002\000\022\011\uffdc\024\uffdc\027\uffdc" +
    "\041\uffdc\043\uffdc\065\uffdc\102\uffdc\104\uffdc\001\002\000" +
    "\022\011\uffd9\024\uffd9\027\uffd9\041\uffd9\043\uffd9\065\uffd9" +
    "\102\uffd9\104\uffd9\001\002\000\004\150\u011a\001\002\000" +
    "\004\113\u0110\001\002\000\006\007\u0111\151\u0112\001\002" +
    "\000\116\004\070\006\110\010\107\012\105\025\050\026" +
    "\121\030\076\031\115\033\100\035\066\037\112\040\101" +
    "\042\054\044\065\046\064\050\063\052\061\054\060\056" +
    "\056\060\073\062\074\066\103\067\116\117\047\120\120" +
    "\121\055\122\051\123\102\124\052\125\106\126\062\127" +
    "\114\130\075\131\104\133\067\143\122\144\123\145\071" +
    "\001\002\000\004\007\u0113\001\002\000\116\004\070\006" +
    "\110\010\107\012\105\025\050\026\121\030\076\031\115" +
    "\033\100\035\066\037\112\040\101\042\054\044\065\046" +
    "\064\050\063\052\061\054\060\056\056\060\073\062\074" +
    "\066\103\067\116\117\047\120\120\121\055\122\051\123" +
    "\102\124\052\125\106\126\062\127\114\130\075\131\104" +
    "\133\067\143\122\144\123\145\071\001\002\000\004\011" +
    "\u0115\001\002\000\136\004\070\006\110\010\107\011\uff58" +
    "\012\105\024\uff58\025\050\026\121\027\uff58\030\076\031" +
    "\115\033\100\035\066\037\112\040\101\041\uff58\042\054" +
    "\043\uff58\044\065\046\064\050\063\052\061\054\060\056" +
    "\056\060\073\062\074\065\uff58\066\103\067\116\102\uff58" +
    "\104\uff58\117\047\120\120\121\055\122\051\123\102\124" +
    "\052\125\106\126\062\127\114\130\075\131\104\133\067" +
    "\143\122\144\123\145\071\001\002\000\022\011\uff56\024" +
    "\uff56\027\uff56\041\uff56\043\uff56\065\uff56\102\uff56\104\uff56" +
    "\001\002\000\004\011\u0118\001\002\000\136\004\070\006" +
    "\110\010\107\011\uff5c\012\105\024\uff5c\025\050\026\121" +
    "\027\uff5c\030\076\031\115\033\100\035\066\037\112\040" +
    "\101\041\uff5c\042\054\043\uff5c\044\065\046\064\050\063" +
    "\052\061\054\060\056\056\060\073\062\074\065\uff5c\066" +
    "\103\067\116\102\uff5c\104\uff5c\117\047\120\120\121\055" +
    "\122\051\123\102\124\052\125\106\126\062\127\114\130" +
    "\075\131\104\133\067\143\122\144\123\145\071\001\002" +
    "\000\022\011\uff5a\024\uff5a\027\uff5a\041\uff5a\043\uff5a\065" +
    "\uff5a\102\uff5a\104\uff5a\001\002\000\004\113\u011b\001\002" +
    "\000\006\007\u011c\151\u011d\001\002\000\116\004\070\006" +
    "\110\010\107\012\105\025\050\026\121\030\076\031\115" +
    "\033\100\035\066\037\112\040\101\042\054\044\065\046" +
    "\064\050\063\052\061\054\060\056\056\060\073\062\074" +
    "\066\103\067\116\117\047\120\120\121\055\122\051\123" +
    "\102\124\052\125\106\126\062\127\114\130\075\131\104" +
    "\133\067\143\122\144\123\145\071\001\002\000\004\007" +
    "\u011e\001\002\000\116\004\070\006\110\010\107\012\105" +
    "\025\050\026\121\030\076\031\115\033\100\035\066\037" +
    "\112\040\101\042\054\044\065\046\064\050\063\052\061" +
    "\054\060\056\056\060\073\062\074\066\103\067\116\117" +
    "\047\120\120\121\055\122\051\123\102\124\052\125\106" +
    "\126\062\127\114\130\075\131\104\133\067\143\122\144" +
    "\123\145\071\001\002\000\004\011\u0120\001\002\000\136" +
    "\004\070\006\110\010\107\011\uff57\012\105\024\uff57\025" +
    "\050\026\121\027\uff57\030\076\031\115\033\100\035\066" +
    "\037\112\040\101\041\uff57\042\054\043\uff57\044\065\046" +
    "\064\050\063\052\061\054\060\056\056\060\073\062\074" +
    "\065\uff57\066\103\067\116\102\uff57\104\uff57\117\047\120" +
    "\120\121\055\122\051\123\102\124\052\125\106\126\062" +
    "\127\114\130\075\131\104\133\067\143\122\144\123\145" +
    "\071\001\002\000\022\011\uff55\024\uff55\027\uff55\041\uff55" +
    "\043\uff55\065\uff55\102\uff55\104\uff55\001\002\000\004\011" +
    "\u0123\001\002\000\136\004\070\006\110\010\107\011\uff5b" +
    "\012\105\024\uff5b\025\050\026\121\027\uff5b\030\076\031" +
    "\115\033\100\035\066\037\112\040\101\041\uff5b\042\054" +
    "\043\uff5b\044\065\046\064\050\063\052\061\054\060\056" +
    "\056\060\073\062\074\065\uff5b\066\103\067\116\102\uff5b" +
    "\104\uff5b\117\047\120\120\121\055\122\051\123\102\124" +
    "\052\125\106\126\062\127\114\130\075\131\104\133\067" +
    "\143\122\144\123\145\071\001\002\000\022\011\uff59\024" +
    "\uff59\027\uff59\041\uff59\043\uff59\065\uff59\102\uff59\104\uff59" +
    "\001\002\000\004\007\u0126\001\002\000\004\144\u0127\001" +
    "\002\000\004\053\u0128\001\002\000\136\004\070\006\110" +
    "\010\107\011\uff7d\012\105\024\uff7d\025\050\026\121\027" +
    "\uff7d\030\076\031\115\033\100\035\066\037\112\040\101" +
    "\041\uff7d\042\054\043\uff7d\044\065\046\064\050\063\052" +
    "\061\054\060\056\056\060\073\062\074\065\uff7d\066\103" +
    "\067\116\102\uff7d\104\uff7d\117\047\120\120\121\055\122" +
    "\051\123\102\124\052\125\106\126\062\127\114\130\075" +
    "\131\104\133\067\143\122\144\123\145\071\001\002\000" +
    "\022\011\uff7e\024\uff7e\027\uff7e\041\uff7e\043\uff7e\065\uff7e" +
    "\102\uff7e\104\uff7e\001\002\000\012\007\uffbe\110\u012e\111" +
    "\u0131\112\u0162\001\002\000\006\107\u0154\112\u0155\001\002" +
    "\000\006\107\u014a\112\u014b\001\002\000\006\107\u0146\112" +
    "\u0147\001\002\000\012\007\uff95\107\uff95\111\u0145\112\uff95" +
    "\001\002\000\004\007\u0143\001\002\000\010\107\u0138\110" +
    "\u012e\111\u0131\001\002\000\012\007\uff96\107\uff96\110\u0136" +
    "\112\uff96\001\002\000\012\107\u012a\110\u012e\111\u0131\112" +
    "\u0130\001\002\000\004\007\u0134\001\002\000\136\004\070" +
    "\006\110\010\107\011\uff8e\012\105\024\uff8e\025\050\026" +
    "\121\027\uff8e\030\076\031\115\033\100\035\066\037\112" +
    "\040\101\041\uff8e\042\054\043\uff8e\044\065\046\064\050" +
    "\063\052\061\054\060\056\056\060\073\062\074\065\uff8e" +
    "\066\103\067\116\102\uff8e\104\uff8e\117\047\120\120\121" +
    "\055\122\051\123\102\124\052\125\106\126\062\127\114" +
    "\130\075\131\104\133\067\143\122\144\123\145\071\001" +
    "\002\000\022\011\uff90\024\uff90\027\uff90\041\uff90\043\uff90" +
    "\065\uff90\102\uff90\104\uff90\001\002\000\010\007\uff97\107" +
    "\uff97\112\uff97\001\002\000\004\107\u0142\001\002\000\010" +
    "\007\uffb3\110\u012e\111\u0131\001\002\000\004\107\u013c\001" +
    "\002\000\004\107\u013b\001\002\000\004\007\uffaf\001\002" +
    "\000\006\007\uffae\110\u013e\001\002\000\004\007\uffac\001" +
    "\002\000\010\007\uff95\107\uff95\112\uff95\001\002\000\004" +
    "\007\uffb0\001\002\000\004\007\uffb1\001\002\000\004\007" +
    "\uffb2\001\002\000\004\007\uffad\001\002\000\136\004\070" +
    "\006\110\010\107\011\uff8d\012\105\024\uff8d\025\050\026" +
    "\121\027\uff8d\030\076\031\115\033\100\035\066\037\112" +
    "\040\101\041\uff8d\042\054\043\uff8d\044\065\046\064\050" +
    "\063\052\061\054\060\056\056\060\073\062\074\065\uff8d" +
    "\066\103\067\116\102\uff8d\104\uff8d\117\047\120\120\121" +
    "\055\122\051\123\102\124\052\125\106\126\062\127\114" +
    "\130\075\131\104\133\067\143\122\144\123\145\071\001" +
    "\002\000\022\011\uff8f\024\uff8f\027\uff8f\041\uff8f\043\uff8f" +
    "\065\uff8f\102\uff8f\104\uff8f\001\002\000\010\007\uff98\107" +
    "\uff98\112\uff98\001\002\000\006\007\uffab\112\u0149\001\002" +
    "\000\004\107\u0148\001\002\000\004\007\uffa9\001\002\000" +
    "\004\007\uffaa\001\002\000\010\007\uffa8\110\u013e\112\u0151" +
    "\001\002\000\006\107\u014d\110\u013e\001\002\000\004\107" +
    "\u014f\001\002\000\006\007\uffa5\110\u013e\001\002\000\004" +
    "\007\uffa3\001\002\000\004\007\uffa4\001\002\000\006\007" +
    "\uffa6\112\u0153\001\002\000\006\007\uffa7\110\u013e\001\002" +
    "\000\004\007\uffa2\001\002\000\004\007\uffa1\001\002\000" +
    "\010\007\uffa0\111\u0156\112\u015c\001\002\000\006\107\u0157" +
    "\111\u0156\001\002\000\010\007\uff96\107\uff96\112\uff96\001" +
    "\002\000\006\007\uff9d\111\u0156\001\002\000\004\107\u0159" +
    "\001\002\000\004\007\uff9c\001\002\000\004\007\uff9b\001" +
    "\002\000\006\007\uff9e\112\u015e\001\002\000\006\007\uff9f" +
    "\111\u0156\001\002\000\004\007\uff9a\001\002\000\004\007" +
    "\uff99\001\002\000\006\007\uffbb\112\u0168\001\002\000\006" +
    "\007\uffbc\112\u0167\001\002\000\006\007\uffba\112\u0166\001" +
    "\002\000\010\007\uffbd\110\u012e\111\u0131\001\002\000\004" +
    "\007\uffb5\001\002\000\004\007\uffb4\001\002\000\004\007" +
    "\uffb6\001\002\000\004\007\uffb9\001\002\000\004\007\uffb8" +
    "\001\002\000\004\007\uffb7\001\002\000\004\007\u016a\001" +
    "\002\000\006\064\u016d\132\u016b\001\002\000\004\147\u0173" +
    "\001\002\000\004\063\u0171\001\002\000\116\004\070\006" +
    "\110\010\107\012\105\025\050\026\121\030\076\031\115" +
    "\033\100\035\066\037\112\040\101\042\054\044\065\046" +
    "\064\050\063\052\061\054\060\056\056\060\073\062\074" +
    "\066\103\067\116\117\047\120\120\121\055\122\051\123" +
    "\102\124\052\125\106\126\062\127\114\130\075\131\104" +
    "\133\067\143\122\144\123\145\071\001\002\000\004\065" +
    "\u016f\001\002\000\012\061\uff60\063\uff60\064\u016d\132\u016b" +
    "\001\002\000\006\061\uff5f\063\uff5f\001\002\000\136\004" +
    "\070\006\110\010\107\011\uff63\012\105\024\uff63\025\050" +
    "\026\121\027\uff63\030\076\031\115\033\100\035\066\037" +
    "\112\040\101\041\uff63\042\054\043\uff63\044\065\046\064" +
    "\050\063\052\061\054\060\056\056\060\073\062\074\065" +
    "\uff63\066\103\067\116\102\uff63\104\uff63\117\047\120\120" +
    "\121\055\122\051\123\102\124\052\125\106\126\062\127" +
    "\114\130\075\131\104\133\067\143\122\144\123\145\071" +
    "\001\002\000\022\011\uff64\024\uff64\027\uff64\041\uff64\043" +
    "\uff64\065\uff64\102\uff64\104\uff64\001\002\000\004\007\u0174" +
    "\001\002\000\116\004\070\006\110\010\107\012\105\025" +
    "\050\026\121\030\076\031\115\033\100\035\066\037\112" +
    "\040\101\042\054\044\065\046\064\050\063\052\061\054" +
    "\060\056\056\060\073\062\074\066\103\067\116\117\047" +
    "\120\120\121\055\122\051\123\102\124\052\125\106\126" +
    "\062\127\114\130\075\131\104\133\067\143\122\144\123" +
    "\145\071\001\002\000\004\065\u0176\001\002\000\012\061" +
    "\uff5e\063\uff5e\064\u016d\132\u016b\001\002\000\006\061\uff5d" +
    "\063\uff5d\001\002\000\022\006\212\031\213\033\205\035" +
    "\211\037\210\117\214\121\215\144\207\001\002\000\004" +
    "\070\u01af\001\002\000\012\075\271\077\270\136\267\137" +
    "\266\001\002\000\006\152\023\153\022\001\002\000\004" +
    "\007\u017d\001\002\000\026\006\212\031\213\033\205\035" +
    "\211\037\210\073\144\117\214\121\215\135\150\144\207" +
    "\001\002\000\012\075\271\077\270\136\267\137\266\001" +
    "\002\000\004\072\u0180\001\002\000\006\073\144\135\150" +
    "\001\002\000\012\075\271\077\270\136\267\137\266\001" +
    "\002\000\010\070\u0192\077\270\137\266\001\002\000\010" +
    "\070\u0184\075\271\136\267\001\002\000\004\066\u0188\001" +
    "\002\000\004\070\u0186\001\002\000\136\004\070\006\110" +
    "\010\107\011\uff32\012\105\024\uff32\025\050\026\121\027" +
    "\uff32\030\076\031\115\033\100\035\066\037\112\040\101" +
    "\041\uff32\042\054\043\uff32\044\065\046\064\050\063\052" +
    "\061\054\060\056\056\060\073\062\074\065\uff32\066\103" +
    "\067\116\102\uff32\104\uff32\117\047\120\120\121\055\122" +
    "\051\123\102\124\052\125\106\126\062\127\114\130\075" +
    "\131\104\133\067\143\122\144\123\145\071\001\002\000" +
    "\022\011\uff31\024\uff31\027\uff31\041\uff31\043\uff31\065\uff31" +
    "\102\uff31\104\uff31\001\002\000\004\134\u0189\001\002\000" +
    "\006\152\023\153\022\001\002\000\004\007\u018b\001\002" +
    "\000\022\006\212\031\213\033\205\035\211\037\210\117" +
    "\214\121\215\144\207\001\002\000\004\072\u018d\001\002" +
    "\000\006\073\144\135\150\001\002\000\006\077\270\137" +
    "\266\001\002\000\004\070\u0190\001\002\000\116\004\070" +
    "\006\110\010\107\012\105\025\050\026\121\030\076\031" +
    "\115\033\100\035\066\037\112\040\101\042\054\044\065" +
    "\046\064\050\063\052\061\054\060\056\056\060\073\062" +
    "\074\066\103\067\116\117\047\120\120\121\055\122\051" +
    "\123\102\124\052\125\106\126\062\127\114\130\075\131" +
    "\104\133\067\143\122\144\123\145\071\001\002\000\022" +
    "\011\uff30\024\uff30\027\uff30\041\uff30\043\uff30\065\uff30\102" +
    "\uff30\104\uff30\001\002\000\136\004\070\006\110\010\107" +
    "\011\uff2f\012\105\024\uff2f\025\050\026\121\027\uff2f\030" +
    "\076\031\115\033\100\035\066\037\112\040\101\041\uff2f" +
    "\042\054\043\uff2f\044\065\046\064\050\063\052\061\054" +
    "\060\056\056\060\073\062\074\065\uff2f\066\103\067\116" +
    "\102\uff2f\104\uff2f\117\047\120\120\121\055\122\051\123" +
    "\102\124\052\125\106\126\062\127\114\130\075\131\104" +
    "\133\067\143\122\144\123\145\071\001\002\000\004\070" +
    "\u0194\001\002\000\136\004\070\006\110\010\107\011\uff34" +
    "\012\105\024\uff34\025\050\026\121\027\uff34\030\076\031" +
    "\115\033\100\035\066\037\112\040\101\041\uff34\042\054" +
    "\043\uff34\044\065\046\064\050\063\052\061\054\060\056" +
    "\056\060\073\062\074\065\uff34\066\103\067\116\102\uff34" +
    "\104\uff34\117\047\120\120\121\055\122\051\123\102\124" +
    "\052\125\106\126\062\127\114\130\075\131\104\133\067" +
    "\143\122\144\123\145\071\001\002\000\022\011\uff33\024" +
    "\uff33\027\uff33\041\uff33\043\uff33\065\uff33\102\uff33\104\uff33" +
    "\001\002\000\022\011\uff2e\024\uff2e\027\uff2e\041\uff2e\043" +
    "\uff2e\065\uff2e\102\uff2e\104\uff2e\001\002\000\010\070\u019e" +
    "\077\270\137\266\001\002\000\010\070\u0199\075\271\136" +
    "\267\001\002\000\136\004\070\006\110\010\107\011\uff40" +
    "\012\105\024\uff40\025\050\026\121\027\uff40\030\076\031" +
    "\115\033\100\035\066\037\112\040\101\041\uff40\042\054" +
    "\043\uff40\044\065\046\064\050\063\052\061\054\060\056" +
    "\056\060\073\062\074\065\uff40\066\103\067\116\102\uff40" +
    "\104\uff40\117\047\120\120\121\055\122\051\123\102\124" +
    "\052\125\106\126\062\127\114\130\075\131\104\133\067" +
    "\143\122\144\123\145\071\001\002\000\004\070\u019b\001" +
    "\002\000\136\004\070\006\110\010\107\011\uff42\012\105" +
    "\024\uff42\025\050\026\121\027\uff42\030\076\031\115\033" +
    "\100\035\066\037\112\040\101\041\uff42\042\054\043\uff42" +
    "\044\065\046\064\050\063\052\061\054\060\056\056\060" +
    "\073\062\074\065\uff42\066\103\067\116\102\uff42\104\uff42" +
    "\117\047\120\120\121\055\122\051\123\102\124\052\125" +
    "\106\126\062\127\114\130\075\131\104\133\067\143\122" +
    "\144\123\145\071\001\002\000\022\011\uff41\024\uff41\027" +
    "\uff41\041\uff41\043\uff41\065\uff41\102\uff41\104\uff41\001\002" +
    "\000\022\011\uff3f\024\uff3f\027\uff3f\041\uff3f\043\uff3f\065" +
    "\uff3f\102\uff3f\104\uff3f\001\002\000\136\004\070\006\110" +
    "\010\107\011\uff3e\012\105\024\uff3e\025\050\026\121\027" +
    "\uff3e\030\076\031\115\033\100\035\066\037\112\040\101" +
    "\041\uff3e\042\054\043\uff3e\044\065\046\064\050\063\052" +
    "\061\054\060\056\056\060\073\062\074\065\uff3e\066\103" +
    "\067\116\102\uff3e\104\uff3e\117\047\120\120\121\055\122" +
    "\051\123\102\124\052\125\106\126\062\127\114\130\075" +
    "\131\104\133\067\143\122\144\123\145\071\001\002\000" +
    "\004\070\u01a0\001\002\000\136\004\070\006\110\010\107" +
    "\011\uff44\012\105\024\uff44\025\050\026\121\027\uff44\030" +
    "\076\031\115\033\100\035\066\037\112\040\101\041\uff44" +
    "\042\054\043\uff44\044\065\046\064\050\063\052\061\054" +
    "\060\056\056\060\073\062\074\065\uff44\066\103\067\116" +
    "\102\uff44\104\uff44\117\047\120\120\121\055\122\051\123" +
    "\102\124\052\125\106\126\062\127\114\130\075\131\104" +
    "\133\067\143\122\144\123\145\071\001\002\000\022\011" +
    "\uff43\024\uff43\027\uff43\041\uff43\043\uff43\065\uff43\102\uff43" +
    "\104\uff43\001\002\000\022\011\uff3d\024\uff3d\027\uff3d\041" +
    "\uff3d\043\uff3d\065\uff3d\102\uff3d\104\uff3d\001\002\000\010" +
    "\070\u01aa\077\270\137\266\001\002\000\010\070\u01a5\075" +
    "\271\136\267\001\002\000\136\004\070\006\110\010\107" +
    "\011\uff4b\012\105\024\uff4b\025\050\026\121\027\uff4b\030" +
    "\076\031\115\033\100\035\066\037\112\040\101\041\uff4b" +
    "\042\054\043\uff4b\044\065\046\064\050\063\052\061\054" +
    "\060\056\056\060\073\062\074\065\uff4b\066\103\067\116" +
    "\102\uff4b\104\uff4b\117\047\120\120\121\055\122\051\123" +
    "\102\124\052\125\106\126\062\127\114\130\075\131\104" +
    "\133\067\143\122\144\123\145\071\001\002\000\004\070" +
    "\u01a7\001\002\000\136\004\070\006\110\010\107\011\uff4f" +
    "\012\105\024\uff4f\025\050\026\121\027\uff4f\030\076\031" +
    "\115\033\100\035\066\037\112\040\101\041\uff4f\042\054" +
    "\043\uff4f\044\065\046\064\050\063\052\061\054\060\056" +
    "\056\060\073\062\074\065\uff4f\066\103\067\116\102\uff4f" +
    "\104\uff4f\117\047\120\120\121\055\122\051\123\102\124" +
    "\052\125\106\126\062\127\114\130\075\131\104\133\067" +
    "\143\122\144\123\145\071\001\002\000\022\011\uff4d\024" +
    "\uff4d\027\uff4d\041\uff4d\043\uff4d\065\uff4d\102\uff4d\104\uff4d" +
    "\001\002\000\022\011\uff49\024\uff49\027\uff49\041\uff49\043" +
    "\uff49\065\uff49\102\uff49\104\uff49\001\002\000\136\004\070" +
    "\006\110\010\107\011\uff47\012\105\024\uff47\025\050\026" +
    "\121\027\uff47\030\076\031\115\033\100\035\066\037\112" +
    "\040\101\041\uff47\042\054\043\uff47\044\065\046\064\050" +
    "\063\052\061\054\060\056\056\060\073\062\074\065\uff47" +
    "\066\103\067\116\102\uff47\104\uff47\117\047\120\120\121" +
    "\055\122\051\123\102\124\052\125\106\126\062\127\114" +
    "\130\075\131\104\133\067\143\122\144\123\145\071\001" +
    "\002\000\004\070\u01ac\001\002\000\136\004\070\006\110" +
    "\010\107\011\uff53\012\105\024\uff53\025\050\026\121\027" +
    "\uff53\030\076\031\115\033\100\035\066\037\112\040\101" +
    "\041\uff53\042\054\043\uff53\044\065\046\064\050\063\052" +
    "\061\054\060\056\056\060\073\062\074\065\uff53\066\103" +
    "\067\116\102\uff53\104\uff53\117\047\120\120\121\055\122" +
    "\051\123\102\124\052\125\106\126\062\127\114\130\075" +
    "\131\104\133\067\143\122\144\123\145\071\001\002\000" +
    "\022\011\uff51\024\uff51\027\uff51\041\uff51\043\uff51\065\uff51" +
    "\102\uff51\104\uff51\001\002\000\022\011\uff45\024\uff45\027" +
    "\uff45\041\uff45\043\uff45\065\uff45\102\uff45\104\uff45\001\002" +
    "\000\136\004\070\006\110\010\107\011\uff2d\012\105\024" +
    "\uff2d\025\050\026\121\027\uff2d\030\076\031\115\033\100" +
    "\035\066\037\112\040\101\041\uff2d\042\054\043\uff2d\044" +
    "\065\046\064\050\063\052\061\054\060\056\056\060\073" +
    "\062\074\065\uff2d\066\103\067\116\102\uff2d\104\uff2d\117" +
    "\047\120\120\121\055\122\051\123\102\124\052\125\106" +
    "\126\062\127\114\130\075\131\104\133\067\143\122\144" +
    "\123\145\071\001\002\000\022\011\uff2c\024\uff2c\027\uff2c" +
    "\041\uff2c\043\uff2c\065\uff2c\102\uff2c\104\uff2c\001\002\000" +
    "\004\072\u01b2\001\002\000\012\073\144\105\153\135\150" +
    "\142\145\001\002\000\004\070\u01c1\001\002\000\012\075" +
    "\271\077\270\136\267\137\266\001\002\000\010\070\u01bc" +
    "\077\270\137\266\001\002\000\010\070\u01b7\075\271\136" +
    "\267\001\002\000\136\004\070\006\110\010\107\011\uff4c" +
    "\012\105\024\uff4c\025\050\026\121\027\uff4c\030\076\031" +
    "\115\033\100\035\066\037\112\040\101\041\uff4c\042\054" +
    "\043\uff4c\044\065\046\064\050\063\052\061\054\060\056" +
    "\056\060\073\062\074\065\uff4c\066\103\067\116\102\uff4c" +
    "\104\uff4c\117\047\120\120\121\055\122\051\123\102\124" +
    "\052\125\106\126\062\127\114\130\075\131\104\133\067" +
    "\143\122\144\123\145\071\001\002\000\004\070\u01b9\001" +
    "\002\000\136\004\070\006\110\010\107\011\uff50\012\105" +
    "\024\uff50\025\050\026\121\027\uff50\030\076\031\115\033" +
    "\100\035\066\037\112\040\101\041\uff50\042\054\043\uff50" +
    "\044\065\046\064\050\063\052\061\054\060\056\056\060" +
    "\073\062\074\065\uff50\066\103\067\116\102\uff50\104\uff50" +
    "\117\047\120\120\121\055\122\051\123\102\124\052\125" +
    "\106\126\062\127\114\130\075\131\104\133\067\143\122" +
    "\144\123\145\071\001\002\000\022\011\uff4e\024\uff4e\027" +
    "\uff4e\041\uff4e\043\uff4e\065\uff4e\102\uff4e\104\uff4e\001\002" +
    "\000\022\011\uff4a\024\uff4a\027\uff4a\041\uff4a\043\uff4a\065" +
    "\uff4a\102\uff4a\104\uff4a\001\002\000\136\004\070\006\110" +
    "\010\107\011\uff48\012\105\024\uff48\025\050\026\121\027" +
    "\uff48\030\076\031\115\033\100\035\066\037\112\040\101" +
    "\041\uff48\042\054\043\uff48\044\065\046\064\050\063\052" +
    "\061\054\060\056\056\060\073\062\074\065\uff48\066\103" +
    "\067\116\102\uff48\104\uff48\117\047\120\120\121\055\122" +
    "\051\123\102\124\052\125\106\126\062\127\114\130\075" +
    "\131\104\133\067\143\122\144\123\145\071\001\002\000" +
    "\004\070\u01be\001\002\000\136\004\070\006\110\010\107" +
    "\011\uff54\012\105\024\uff54\025\050\026\121\027\uff54\030" +
    "\076\031\115\033\100\035\066\037\112\040\101\041\uff54" +
    "\042\054\043\uff54\044\065\046\064\050\063\052\061\054" +
    "\060\056\056\060\073\062\074\065\uff54\066\103\067\116" +
    "\102\uff54\104\uff54\117\047\120\120\121\055\122\051\123" +
    "\102\124\052\125\106\126\062\127\114\130\075\131\104" +
    "\133\067\143\122\144\123\145\071\001\002\000\022\011" +
    "\uff52\024\uff52\027\uff52\041\uff52\043\uff52\065\uff52\102\uff52" +
    "\104\uff52\001\002\000\022\011\uff46\024\uff46\027\uff46\041" +
    "\uff46\043\uff46\065\uff46\102\uff46\104\uff46\001\002\000\136" +
    "\004\070\006\110\010\107\011\uff2b\012\105\024\uff2b\025" +
    "\050\026\121\027\uff2b\030\076\031\115\033\100\035\066" +
    "\037\112\040\101\041\uff2b\042\054\043\uff2b\044\065\046" +
    "\064\050\063\052\061\054\060\056\056\060\073\062\074" +
    "\065\uff2b\066\103\067\116\102\uff2b\104\uff2b\117\047\120" +
    "\120\121\055\122\051\123\102\124\052\125\106\126\062" +
    "\127\114\130\075\131\104\133\067\143\122\144\123\145" +
    "\071\001\002\000\022\011\uff2a\024\uff2a\027\uff2a\041\uff2a" +
    "\043\uff2a\065\uff2a\102\uff2a\104\uff2a\001\002\000\004\007" +
    "\u01c4\001\002\000\004\144\u01c5\001\002\000\004\047\u01c6" +
    "\001\002\000\136\004\070\006\110\010\107\011\uff81\012" +
    "\105\024\uff81\025\050\026\121\027\uff81\030\076\031\115" +
    "\033\100\035\066\037\112\040\101\041\uff81\042\054\043" +
    "\uff81\044\065\046\064\050\063\052\061\054\060\056\056" +
    "\060\073\062\074\065\uff81\066\103\067\116\102\uff81\104" +
    "\uff81\117\047\120\120\121\055\122\051\123\102\124\052" +
    "\125\106\126\062\127\114\130\075\131\104\133\067\143" +
    "\122\144\123\145\071\001\002\000\022\011\uff82\024\uff82" +
    "\027\uff82\041\uff82\043\uff82\065\uff82\102\uff82\104\uff82\001" +
    "\002\000\004\041\u01c9\001\002\000\136\004\070\006\110" +
    "\010\107\011\uff92\012\105\024\uff92\025\050\026\121\027" +
    "\uff92\030\076\031\115\033\100\035\066\037\112\040\101" +
    "\041\uff92\042\054\043\uff92\044\065\046\064\050\063\052" +
    "\061\054\060\056\056\060\073\062\074\065\uff92\066\103" +
    "\067\116\102\uff92\104\uff92\117\047\120\120\121\055\122" +
    "\051\123\102\124\052\125\106\126\062\127\114\130\075" +
    "\131\104\133\067\143\122\144\123\145\071\001\002\000" +
    "\022\011\uff94\024\uff94\027\uff94\041\uff94\043\uff94\065\uff94" +
    "\102\uff94\104\uff94\001\002\000\004\034\u01cc\001\002\000" +
    "\136\004\070\006\110\010\107\011\uffdf\012\105\024\uffdf" +
    "\025\050\026\121\027\uffdf\030\076\031\115\033\100\035" +
    "\066\037\112\040\101\041\uffdf\042\054\043\uffdf\044\065" +
    "\046\064\050\063\052\061\054\060\056\056\060\073\062" +
    "\074\065\uffdf\066\103\067\116\102\uffdf\104\uffdf\117\047" +
    "\120\120\121\055\122\051\123\102\124\052\125\106\126" +
    "\062\127\114\130\075\131\104\133\067\143\122\144\123" +
    "\145\071\001\002\000\022\011\uffe1\024\uffe1\027\uffe1\041" +
    "\uffe1\043\uffe1\065\uffe1\102\uffe1\104\uffe1\001\002\000\022" +
    "\011\uffe8\024\uffe8\027\uffe8\041\uffe8\043\uffe8\065\uffe8\102" +
    "\uffe8\104\uffe8\001\002\000\006\007\u01d5\146\u01d6\001\002" +
    "\000\004\007\u01d1\001\002\000\006\064\u016d\132\u016b\001" +
    "\002\000\004\061\u01d3\001\002\000\136\004\070\006\110" +
    "\010\107\011\uff65\012\105\024\uff65\025\050\026\121\027" +
    "\uff65\030\076\031\115\033\100\035\066\037\112\040\101" +
    "\041\uff65\042\054\043\uff65\044\065\046\064\050\063\052" +
    "\061\054\060\056\056\060\073\062\074\065\uff65\066\103" +
    "\067\116\102\uff65\104\uff65\117\047\120\120\121\055\122" +
    "\051\123\102\124\052\125\106\126\062\127\114\130\075" +
    "\131\104\133\067\143\122\144\123\145\071\001\002\000" +
    "\022\011\uff66\024\uff66\027\uff66\041\uff66\043\uff66\065\uff66" +
    "\102\uff66\104\uff66\001\002\000\006\064\u016d\132\u016b\001" +
    "\002\000\004\007\u01d7\001\002\000\006\064\u016d\132\u016b" +
    "\001\002\000\004\061\u01d9\001\002\000\136\004\070\006" +
    "\110\010\107\011\uff6b\012\105\024\uff6b\025\050\026\121" +
    "\027\uff6b\030\076\031\115\033\100\035\066\037\112\040" +
    "\101\041\uff6b\042\054\043\uff6b\044\065\046\064\050\063" +
    "\052\061\054\060\056\056\060\073\062\074\065\uff6b\066" +
    "\103\067\116\102\uff6b\104\uff6b\117\047\120\120\121\055" +
    "\122\051\123\102\124\052\125\106\126\062\127\114\130" +
    "\075\131\104\133\067\143\122\144\123\145\071\001\002" +
    "\000\022\011\uff6c\024\uff6c\027\uff6c\041\uff6c\043\uff6c\065" +
    "\uff6c\102\uff6c\104\uff6c\001\002\000\004\061\u01dc\001\002" +
    "\000\136\004\070\006\110\010\107\011\uff69\012\105\024" +
    "\uff69\025\050\026\121\027\uff69\030\076\031\115\033\100" +
    "\035\066\037\112\040\101\041\uff69\042\054\043\uff69\044" +
    "\065\046\064\050\063\052\061\054\060\056\056\060\073" +
    "\062\074\065\uff69\066\103\067\116\102\uff69\104\uff69\117" +
    "\047\120\120\121\055\122\051\123\102\124\052\125\106" +
    "\126\062\127\114\130\075\131\104\133\067\143\122\144" +
    "\123\145\071\001\002\000\022\011\uff6a\024\uff6a\027\uff6a" +
    "\041\uff6a\043\uff6a\065\uff6a\102\uff6a\104\uff6a\001\002\000" +
    "\004\063\u01df\001\002\000\136\004\070\006\110\010\107" +
    "\011\uff61\012\105\024\uff61\025\050\026\121\027\uff61\030" +
    "\076\031\115\033\100\035\066\037\112\040\101\041\uff61" +
    "\042\054\043\uff61\044\065\046\064\050\063\052\061\054" +
    "\060\056\056\060\073\062\074\065\uff61\066\103\067\116" +
    "\102\uff61\104\uff61\117\047\120\120\121\055\122\051\123" +
    "\102\124\052\125\106\126\062\127\114\130\075\131\104" +
    "\133\067\143\122\144\123\145\071\001\002\000\022\011" +
    "\uff62\024\uff62\027\uff62\041\uff62\043\uff62\065\uff62\102\uff62" +
    "\104\uff62\001\002\000\004\061\u01e2\001\002\000\136\004" +
    "\070\006\110\010\107\011\uff68\012\105\024\uff68\025\050" +
    "\026\121\027\uff68\030\076\031\115\033\100\035\066\037" +
    "\112\040\101\041\uff68\042\054\043\uff68\044\065\046\064" +
    "\050\063\052\061\054\060\056\056\060\073\062\074\065" +
    "\uff68\066\103\067\116\102\uff68\104\uff68\117\047\120\120" +
    "\121\055\122\051\123\102\124\052\125\106\126\062\127" +
    "\114\130\075\131\104\133\067\143\122\144\123\145\071" +
    "\001\002\000\022\011\uff67\024\uff67\027\uff67\041\uff67\043" +
    "\uff67\065\uff67\102\uff67\104\uff67\001\002\000\004\007\u01e5" +
    "\001\002\000\116\004\070\006\110\010\107\012\105\025" +
    "\050\026\121\030\076\031\115\033\100\035\066\037\112" +
    "\040\101\042\054\044\065\046\064\050\063\052\061\054" +
    "\060\056\056\060\073\062\074\066\103\067\116\117\047" +
    "\120\120\121\055\122\051\123\102\124\052\125\106\126" +
    "\062\127\114\130\075\131\104\133\067\143\122\144\123" +
    "\145\071\001\002\000\004\027\u01e7\001\002\000\136\004" +
    "\070\006\110\010\107\011\uff87\012\105\024\uff87\025\050" +
    "\026\121\027\uff87\030\076\031\115\033\100\035\066\037" +
    "\112\040\101\041\uff87\042\054\043\uff87\044\065\046\064" +
    "\050\063\052\061\054\060\056\056\060\073\062\074\065" +
    "\uff87\066\103\067\116\102\uff87\104\uff87\117\047\120\120" +
    "\121\055\122\051\123\102\124\052\125\106\126\062\127" +
    "\114\130\075\131\104\133\067\143\122\144\123\145\071" +
    "\001\002\000\022\011\uff88\024\uff88\027\uff88\041\uff88\043" +
    "\uff88\065\uff88\102\uff88\104\uff88\001\002\000\004\007\u01ea" +
    "\001\002\000\016\071\u01ec\073\144\105\153\134\u01ee\135" +
    "\150\142\145\001\002\000\004\070\u021e\001\002\000\022" +
    "\006\212\031\213\033\205\035\211\037\210\117\214\121" +
    "\215\144\207\001\002\000\012\075\271\077\270\136\267" +
    "\137\266\001\002\000\006\152\023\153\022\001\002\000" +
    "\004\007\u01f0\001\002\000\022\006\212\031\213\033\205" +
    "\035\211\037\210\117\214\121\215\144\207\001\002\000" +
    "\004\072\u01f2\001\002\000\006\073\144\135\150\001\002" +
    "\000\012\075\271\077\270\136\267\137\266\001\002\000" +
    "\010\070\u01fb\077\270\137\266\001\002\000\010\070\u01f6" +
    "\075\271\136\267\001\002\000\136\004\070\006\110\010" +
    "\107\011\ufefb\012\105\024\ufefb\025\050\026\121\027\ufefb" +
    "\030\076\031\115\033\100\035\066\037\112\040\101\041" +
    "\ufefb\042\054\043\ufefb\044\065\046\064\050\063\052\061" +
    "\054\060\056\056\060\073\062\074\065\ufefb\066\103\067" +
    "\116\102\ufefb\104\ufefb\117\047\120\120\121\055\122\051" +
    "\123\102\124\052\125\106\126\062\127\114\130\075\131" +
    "\104\133\067\143\122\144\123\145\071\001\002\000\004" +
    "\070\u01f8\001\002\000\136\004\070\006\110\010\107\011" +
    "\ufeff\012\105\024\ufeff\025\050\026\121\027\ufeff\030\076" +
    "\031\115\033\100\035\066\037\112\040\101\041\ufeff\042" +
    "\054\043\ufeff\044\065\046\064\050\063\052\061\054\060" +
    "\056\056\060\073\062\074\065\ufeff\066\103\067\116\102" +
    "\ufeff\104\ufeff\117\047\120\120\121\055\122\051\123\102" +
    "\124\052\125\106\126\062\127\114\130\075\131\104\133" +
    "\067\143\122\144\123\145\071\001\002\000\022\011\ufefe" +
    "\024\ufefe\027\ufefe\041\ufefe\043\ufefe\065\ufefe\102\ufefe\104" +
    "\ufefe\001\002\000\022\011\ufefa\024\ufefa\027\ufefa\041\ufefa" +
    "\043\ufefa\065\ufefa\102\ufefa\104\ufefa\001\002\000\136\004" +
    "\070\006\110\010\107\011\ufefd\012\105\024\ufefd\025\050" +
    "\026\121\027\ufefd\030\076\031\115\033\100\035\066\037" +
    "\112\040\101\041\ufefd\042\054\043\ufefd\044\065\046\064" +
    "\050\063\052\061\054\060\056\056\060\073\062\074\065" +
    "\ufefd\066\103\067\116\102\ufefd\104\ufefd\117\047\120\120" +
    "\121\055\122\051\123\102\124\052\125\106\126\062\127" +
    "\114\130\075\131\104\133\067\143\122\144\123\145\071" +
    "\001\002\000\004\070\u01fd\001\002\000\136\004\070\006" +
    "\110\010\107\011\uff01\012\105\024\uff01\025\050\026\121" +
    "\027\uff01\030\076\031\115\033\100\035\066\037\112\040" +
    "\101\041\uff01\042\054\043\uff01\044\065\046\064\050\063" +
    "\052\061\054\060\056\056\060\073\062\074\065\uff01\066" +
    "\103\067\116\102\uff01\104\uff01\117\047\120\120\121\055" +
    "\122\051\123\102\124\052\125\106\126\062\127\114\130" +
    "\075\131\104\133\067\143\122\144\123\145\071\001\002" +
    "\000\022\011\uff00\024\uff00\027\uff00\041\uff00\043\uff00\065" +
    "\uff00\102\uff00\104\uff00\001\002\000\022\011\ufefc\024\ufefc" +
    "\027\ufefc\041\ufefc\043\ufefc\065\ufefc\102\ufefc\104\ufefc\001" +
    "\002\000\010\070\u0207\077\270\137\266\001\002\000\010" +
    "\070\u0202\075\271\136\267\001\002\000\136\004\070\006" +
    "\110\010\107\011\uff05\012\105\024\uff05\025\050\026\121" +
    "\027\uff05\030\076\031\115\033\100\035\066\037\112\040" +
    "\101\041\uff05\042\054\043\uff05\044\065\046\064\050\063" +
    "\052\061\054\060\056\056\060\073\062\074\065\uff05\066" +
    "\103\067\116\102\uff05\104\uff05\117\047\120\120\121\055" +
    "\122\051\123\102\124\052\125\106\126\062\127\114\130" +
    "\075\131\104\133\067\143\122\144\123\145\071\001\002" +
    "\000\004\070\u0204\001\002\000\136\004\070\006\110\010" +
    "\107\011\uff0d\012\105\024\uff0d\025\050\026\121\027\uff0d" +
    "\030\076\031\115\033\100\035\066\037\112\040\101\041" +
    "\uff0d\042\054\043\uff0d\044\065\046\064\050\063\052\061" +
    "\054\060\056\056\060\073\062\074\065\uff0d\066\103\067" +
    "\116\102\uff0d\104\uff0d\117\047\120\120\121\055\122\051" +
    "\123\102\124\052\125\106\126\062\127\114\130\075\131" +
    "\104\133\067\143\122\144\123\145\071\001\002\000\022" +
    "\011\uff0b\024\uff0b\027\uff0b\041\uff0b\043\uff0b\065\uff0b\102" +
    "\uff0b\104\uff0b\001\002\000\022\011\uff03\024\uff03\027\uff03" +
    "\041\uff03\043\uff03\065\uff03\102\uff03\104\uff03\001\002\000" +
    "\136\004\070\006\110\010\107\011\uff09\012\105\024\uff09" +
    "\025\050\026\121\027\uff09\030\076\031\115\033\100\035" +
    "\066\037\112\040\101\041\uff09\042\054\043\uff09\044\065" +
    "\046\064\050\063\052\061\054\060\056\056\060\073\062" +
    "\074\065\uff09\066\103\067\116\102\uff09\104\uff09\117\047" +
    "\120\120\121\055\122\051\123\102\124\052\125\106\126" +
    "\062\127\114\130\075\131\104\133\067\143\122\144\123" +
    "\145\071\001\002\000\004\070\u0209\001\002\000\136\004" +
    "\070\006\110\010\107\011\uff11\012\105\024\uff11\025\050" +
    "\026\121\027\uff11\030\076\031\115\033\100\035\066\037" +
    "\112\040\101\041\uff11\042\054\043\uff11\044\065\046\064" +
    "\050\063\052\061\054\060\056\056\060\073\062\074\065" +
    "\uff11\066\103\067\116\102\uff11\104\uff11\117\047\120\120" +
    "\121\055\122\051\123\102\124\052\125\106\126\062\127" +
    "\114\130\075\131\104\133\067\143\122\144\123\145\071" +
    "\001\002\000\022\011\uff0f\024\uff0f\027\uff0f\041\uff0f\043" +
    "\uff0f\065\uff0f\102\uff0f\104\uff0f\001\002\000\022\011\uff07" +
    "\024\uff07\027\uff07\041\uff07\043\uff07\065\uff07\102\uff07\104" +
    "\uff07\001\002\000\004\072\u020d\001\002\000\012\073\144" +
    "\105\153\135\150\142\145\001\002\000\004\070\u021c\001" +
    "\002\000\012\075\271\077\270\136\267\137\266\001\002" +
    "\000\010\070\u0217\077\270\137\266\001\002\000\010\070" +
    "\u0212\075\271\136\267\001\002\000\136\004\070\006\110" +
    "\010\107\011\uff04\012\105\024\uff04\025\050\026\121\027" +
    "\uff04\030\076\031\115\033\100\035\066\037\112\040\101" +
    "\041\uff04\042\054\043\uff04\044\065\046\064\050\063\052" +
    "\061\054\060\056\056\060\073\062\074\065\uff04\066\103" +
    "\067\116\102\uff04\104\uff04\117\047\120\120\121\055\122" +
    "\051\123\102\124\052\125\106\126\062\127\114\130\075" +
    "\131\104\133\067\143\122\144\123\145\071\001\002\000" +
    "\004\070\u0214\001\002\000\136\004\070\006\110\010\107" +
    "\011\uff0c\012\105\024\uff0c\025\050\026\121\027\uff0c\030" +
    "\076\031\115\033\100\035\066\037\112\040\101\041\uff0c" +
    "\042\054\043\uff0c\044\065\046\064\050\063\052\061\054" +
    "\060\056\056\060\073\062\074\065\uff0c\066\103\067\116" +
    "\102\uff0c\104\uff0c\117\047\120\120\121\055\122\051\123" +
    "\102\124\052\125\106\126\062\127\114\130\075\131\104" +
    "\133\067\143\122\144\123\145\071\001\002\000\022\011" +
    "\uff0a\024\uff0a\027\uff0a\041\uff0a\043\uff0a\065\uff0a\102\uff0a" +
    "\104\uff0a\001\002\000\022\011\uff02\024\uff02\027\uff02\041" +
    "\uff02\043\uff02\065\uff02\102\uff02\104\uff02\001\002\000\136" +
    "\004\070\006\110\010\107\011\uff08\012\105\024\uff08\025" +
    "\050\026\121\027\uff08\030\076\031\115\033\100\035\066" +
    "\037\112\040\101\041\uff08\042\054\043\uff08\044\065\046" +
    "\064\050\063\052\061\054\060\056\056\060\073\062\074" +
    "\065\uff08\066\103\067\116\102\uff08\104\uff08\117\047\120" +
    "\120\121\055\122\051\123\102\124\052\125\106\126\062" +
    "\127\114\130\075\131\104\133\067\143\122\144\123\145" +
    "\071\001\002\000\004\070\u0219\001\002\000\136\004\070" +
    "\006\110\010\107\011\uff10\012\105\024\uff10\025\050\026" +
    "\121\027\uff10\030\076\031\115\033\100\035\066\037\112" +
    "\040\101\041\uff10\042\054\043\uff10\044\065\046\064\050" +
    "\063\052\061\054\060\056\056\060\073\062\074\065\uff10" +
    "\066\103\067\116\102\uff10\104\uff10\117\047\120\120\121" +
    "\055\122\051\123\102\124\052\125\106\126\062\127\114" +
    "\130\075\131\104\133\067\143\122\144\123\145\071\001" +
    "\002\000\022\011\uff0e\024\uff0e\027\uff0e\041\uff0e\043\uff0e" +
    "\065\uff0e\102\uff0e\104\uff0e\001\002\000\022\011\uff06\024" +
    "\uff06\027\uff06\041\uff06\043\uff06\065\uff06\102\uff06\104\uff06" +
    "\001\002\000\136\004\070\006\110\010\107\011\ufef9\012" +
    "\105\024\ufef9\025\050\026\121\027\ufef9\030\076\031\115" +
    "\033\100\035\066\037\112\040\101\041\ufef9\042\054\043" +
    "\ufef9\044\065\046\064\050\063\052\061\054\060\056\056" +
    "\060\073\062\074\065\ufef9\066\103\067\116\102\ufef9\104" +
    "\ufef9\117\047\120\120\121\055\122\051\123\102\124\052" +
    "\125\106\126\062\127\114\130\075\131\104\133\067\143" +
    "\122\144\123\145\071\001\002\000\022\011\ufef7\024\ufef7" +
    "\027\ufef7\041\ufef7\043\ufef7\065\ufef7\102\ufef7\104\ufef7\001" +
    "\002\000\136\004\070\006\110\010\107\011\ufef8\012\105" +
    "\024\ufef8\025\050\026\121\027\ufef8\030\076\031\115\033" +
    "\100\035\066\037\112\040\101\041\ufef8\042\054\043\ufef8" +
    "\044\065\046\064\050\063\052\061\054\060\056\056\060" +
    "\073\062\074\065\ufef8\066\103\067\116\102\ufef8\104\ufef8" +
    "\117\047\120\120\121\055\122\051\123\102\124\052\125" +
    "\106\126\062\127\114\130\075\131\104\133\067\143\122" +
    "\144\123\145\071\001\002\000\022\011\ufef6\024\ufef6\027" +
    "\ufef6\041\ufef6\043\ufef6\065\ufef6\102\ufef6\104\ufef6\001\002" +
    "\000\004\007\u0221\001\002\000\012\071\u0223\105\153\134" +
    "\u0224\142\145\001\002\000\004\070\u023b\001\002\000\022" +
    "\006\212\031\213\033\205\035\211\037\210\117\214\121" +
    "\215\144\207\001\002\000\006\152\023\153\022\001\002" +
    "\000\004\007\u0226\001\002\000\022\006\212\031\213\033" +
    "\205\035\211\037\210\117\214\121\215\144\207\001\002" +
    "\000\004\072\u0228\001\002\000\006\073\144\135\150\001" +
    "\002\000\012\075\271\077\270\136\267\137\266\001\002" +
    "\000\010\070\u0231\077\270\137\266\001\002\000\010\070" +
    "\u022c\075\271\136\267\001\002\000\136\004\070\006\110" +
    "\010\107\011\uff38\012\105\024\uff38\025\050\026\121\027" +
    "\uff38\030\076\031\115\033\100\035\066\037\112\040\101" +
    "\041\uff38\042\054\043\uff38\044\065\046\064\050\063\052" +
    "\061\054\060\056\056\060\073\062\074\065\uff38\066\103" +
    "\067\116\102\uff38\104\uff38\117\047\120\120\121\055\122" +
    "\051\123\102\124\052\125\106\126\062\127\114\130\075" +
    "\131\104\133\067\143\122\144\123\145\071\001\002\000" +
    "\004\070\u022e\001\002\000\136\004\070\006\110\010\107" +
    "\011\uff3a\012\105\024\uff3a\025\050\026\121\027\uff3a\030" +
    "\076\031\115\033\100\035\066\037\112\040\101\041\uff3a" +
    "\042\054\043\uff3a\044\065\046\064\050\063\052\061\054" +
    "\060\056\056\060\073\062\074\065\uff3a\066\103\067\116" +
    "\102\uff3a\104\uff3a\117\047\120\120\121\055\122\051\123" +
    "\102\124\052\125\106\126\062\127\114\130\075\131\104" +
    "\133\067\143\122\144\123\145\071\001\002\000\022\011" +
    "\uff39\024\uff39\027\uff39\041\uff39\043\uff39\065\uff39\102\uff39" +
    "\104\uff39\001\002\000\022\011\uff37\024\uff37\027\uff37\041" +
    "\uff37\043\uff37\065\uff37\102\uff37\104\uff37\001\002\000\136" +
    "\004\070\006\110\010\107\011\uff36\012\105\024\uff36\025" +
    "\050\026\121\027\uff36\030\076\031\115\033\100\035\066" +
    "\037\112\040\101\041\uff36\042\054\043\uff36\044\065\046" +
    "\064\050\063\052\061\054\060\056\056\060\073\062\074" +
    "\065\uff36\066\103\067\116\102\uff36\104\uff36\117\047\120" +
    "\120\121\055\122\051\123\102\124\052\125\106\126\062" +
    "\127\114\130\075\131\104\133\067\143\122\144\123\145" +
    "\071\001\002\000\004\070\u0233\001\002\000\136\004\070" +
    "\006\110\010\107\011\uff3c\012\105\024\uff3c\025\050\026" +
    "\121\027\uff3c\030\076\031\115\033\100\035\066\037\112" +
    "\040\101\041\uff3c\042\054\043\uff3c\044\065\046\064\050" +
    "\063\052\061\054\060\056\056\060\073\062\074\065\uff3c" +
    "\066\103\067\116\102\uff3c\104\uff3c\117\047\120\120\121" +
    "\055\122\051\123\102\124\052\125\106\126\062\127\114" +
    "\130\075\131\104\133\067\143\122\144\123\145\071\001" +
    "\002\000\022\011\uff3b\024\uff3b\027\uff3b\041\uff3b\043\uff3b" +
    "\065\uff3b\102\uff3b\104\uff3b\001\002\000\022\011\uff35\024" +
    "\uff35\027\uff35\041\uff35\043\uff35\065\uff35\102\uff35\104\uff35" +
    "\001\002\000\004\072\u0237\001\002\000\006\105\153\142" +
    "\145\001\002\000\004\070\u0239\001\002\000\136\004\070" +
    "\006\110\010\107\011\uff27\012\105\024\uff27\025\050\026" +
    "\121\027\uff27\030\076\031\115\033\100\035\066\037\112" +
    "\040\101\041\uff27\042\054\043\uff27\044\065\046\064\050" +
    "\063\052\061\054\060\056\056\060\073\062\074\065\uff27" +
    "\066\103\067\116\102\uff27\104\uff27\117\047\120\120\121" +
    "\055\122\051\123\102\124\052\125\106\126\062\127\114" +
    "\130\075\131\104\133\067\143\122\144\123\145\071\001" +
    "\002\000\022\011\uff26\024\uff26\027\uff26\041\uff26\043\uff26" +
    "\065\uff26\102\uff26\104\uff26\001\002\000\136\004\070\006" +
    "\110\010\107\011\uff29\012\105\024\uff29\025\050\026\121" +
    "\027\uff29\030\076\031\115\033\100\035\066\037\112\040" +
    "\101\041\uff29\042\054\043\uff29\044\065\046\064\050\063" +
    "\052\061\054\060\056\056\060\073\062\074\065\uff29\066" +
    "\103\067\116\102\uff29\104\uff29\117\047\120\120\121\055" +
    "\122\051\123\102\124\052\125\106\126\062\127\114\130" +
    "\075\131\104\133\067\143\122\144\123\145\071\001\002" +
    "\000\022\011\uff28\024\uff28\027\uff28\041\uff28\043\uff28\065" +
    "\uff28\102\uff28\104\uff28\001\002\000\004\036\u0241\001\002" +
    "\000\004\036\u023f\001\002\000\136\004\070\006\110\010" +
    "\107\011\uffd5\012\105\024\uffd5\025\050\026\121\027\uffd5" +
    "\030\076\031\115\033\100\035\066\037\112\040\101\041" +
    "\uffd5\042\054\043\uffd5\044\065\046\064\050\063\052\061" +
    "\054\060\056\056\060\073\062\074\065\uffd5\066\103\067" +
    "\116\102\uffd5\104\uffd5\117\047\120\120\121\055\122\051" +
    "\123\102\124\052\125\106\126\062\127\114\130\075\131" +
    "\104\133\067\143\122\144\123\145\071\001\002\000\022" +
    "\011\uffd4\024\uffd4\027\uffd4\041\uffd4\043\uffd4\065\uffd4\102" +
    "\uffd4\104\uffd4\001\002\000\136\004\070\006\110\010\107" +
    "\011\uffdb\012\105\024\uffdb\025\050\026\121\027\uffdb\030" +
    "\076\031\115\033\100\035\066\037\112\040\101\041\uffdb" +
    "\042\054\043\uffdb\044\065\046\064\050\063\052\061\054" +
    "\060\056\056\060\073\062\074\065\uffdb\066\103\067\116" +
    "\102\uffdb\104\uffdb\117\047\120\120\121\055\122\051\123" +
    "\102\124\052\125\106\126\062\127\114\130\075\131\104" +
    "\133\067\143\122\144\123\145\071\001\002\000\022\011" +
    "\uffdd\024\uffdd\027\uffdd\041\uffdd\043\uffdd\065\uffdd\102\uffdd" +
    "\104\uffdd\001\002\000\004\045\u0244\001\002\000\136\004" +
    "\070\006\110\010\107\011\uff77\012\105\024\uff77\025\050" +
    "\026\121\027\uff77\030\076\031\115\033\100\035\066\037" +
    "\112\040\101\041\uff77\042\054\043\uff77\044\065\046\064" +
    "\050\063\052\061\054\060\056\056\060\073\062\074\065" +
    "\uff77\066\103\067\116\102\uff77\104\uff77\117\047\120\120" +
    "\121\055\122\051\123\102\124\052\125\106\126\062\127" +
    "\114\130\075\131\104\133\067\143\122\144\123\145\071" +
    "\001\002\000\022\011\uff78\024\uff78\027\uff78\041\uff78\043" +
    "\uff78\065\uff78\102\uff78\104\uff78\001\002\000\004\047\u0247" +
    "\001\002\000\136\004\070\006\110\010\107\011\uff75\012" +
    "\105\024\uff75\025\050\026\121\027\uff75\030\076\031\115" +
    "\033\100\035\066\037\112\040\101\041\uff75\042\054\043" +
    "\uff75\044\065\046\064\050\063\052\061\054\060\056\056" +
    "\060\073\062\074\065\uff75\066\103\067\116\102\uff75\104" +
    "\uff75\117\047\120\120\121\055\122\051\123\102\124\052" +
    "\125\106\126\062\127\114\130\075\131\104\133\067\143" +
    "\122\144\123\145\071\001\002\000\022\011\uff76\024\uff76" +
    "\027\uff76\041\uff76\043\uff76\065\uff76\102\uff76\104\uff76\001" +
    "\002\000\004\051\u024a\001\002\000\136\004\070\006\110" +
    "\010\107\011\uff73\012\105\024\uff73\025\050\026\121\027" +
    "\uff73\030\076\031\115\033\100\035\066\037\112\040\101" +
    "\041\uff73\042\054\043\uff73\044\065\046\064\050\063\052" +
    "\061\054\060\056\056\060\073\062\074\065\uff73\066\103" +
    "\067\116\102\uff73\104\uff73\117\047\120\120\121\055\122" +
    "\051\123\102\124\052\125\106\126\062\127\114\130\075" +
    "\131\104\133\067\143\122\144\123\145\071\001\002\000" +
    "\022\011\uff74\024\uff74\027\uff74\041\uff74\043\uff74\065\uff74" +
    "\102\uff74\104\uff74\001\002\000\004\007\u024d\001\002\000" +
    "\004\144\u024e\001\002\000\004\055\u024f\001\002\000\136" +
    "\004\070\006\110\010\107\011\uff7b\012\105\024\uff7b\025" +
    "\050\026\121\027\uff7b\030\076\031\115\033\100\035\066" +
    "\037\112\040\101\041\uff7b\042\054\043\uff7b\044\065\046" +
    "\064\050\063\052\061\054\060\056\056\060\073\062\074" +
    "\065\uff7b\066\103\067\116\102\uff7b\104\uff7b\117\047\120" +
    "\120\121\055\122\051\123\102\124\052\125\106\126\062" +
    "\127\114\130\075\131\104\133\067\143\122\144\123\145" +
    "\071\001\002\000\022\011\uff7c\024\uff7c\027\uff7c\041\uff7c" +
    "\043\uff7c\065\uff7c\102\uff7c\104\uff7c\001\002\000\004\053" +
    "\u0252\001\002\000\136\004\070\006\110\010\107\011\uff71" +
    "\012\105\024\uff71\025\050\026\121\027\uff71\030\076\031" +
    "\115\033\100\035\066\037\112\040\101\041\uff71\042\054" +
    "\043\uff71\044\065\046\064\050\063\052\061\054\060\056" +
    "\056\060\073\062\074\065\uff71\066\103\067\116\102\uff71" +
    "\104\uff71\117\047\120\120\121\055\122\051\123\102\124" +
    "\052\125\106\126\062\127\114\130\075\131\104\133\067" +
    "\143\122\144\123\145\071\001\002\000\022\011\uff72\024" +
    "\uff72\027\uff72\041\uff72\043\uff72\065\uff72\102\uff72\104\uff72" +
    "\001\002\000\004\055\u0255\001\002\000\136\004\070\006" +
    "\110\010\107\011\uff6f\012\105\024\uff6f\025\050\026\121" +
    "\027\uff6f\030\076\031\115\033\100\035\066\037\112\040" +
    "\101\041\uff6f\042\054\043\uff6f\044\065\046\064\050\063" +
    "\052\061\054\060\056\056\060\073\062\074\065\uff6f\066" +
    "\103\067\116\102\uff6f\104\uff6f\117\047\120\120\121\055" +
    "\122\051\123\102\124\052\125\106\126\062\127\114\130" +
    "\075\131\104\133\067\143\122\144\123\145\071\001\002" +
    "\000\022\011\uff70\024\uff70\027\uff70\041\uff70\043\uff70\065" +
    "\uff70\102\uff70\104\uff70\001\002\000\004\015\ufff3\001\002" +
    "\000\004\057\u0259\001\002\000\136\004\070\006\110\010" +
    "\107\011\uff6d\012\105\024\uff6d\025\050\026\121\027\uff6d" +
    "\030\076\031\115\033\100\035\066\037\112\040\101\041" +
    "\uff6d\042\054\043\uff6d\044\065\046\064\050\063\052\061" +
    "\054\060\056\056\060\073\062\074\065\uff6d\066\103\067" +
    "\116\102\uff6d\104\uff6d\117\047\120\120\121\055\122\051" +
    "\123\102\124\052\125\106\126\062\127\114\130\075\131" +
    "\104\133\067\143\122\144\123\145\071\001\002\000\022" +
    "\011\uff6e\024\uff6e\027\uff6e\041\uff6e\043\uff6e\065\uff6e\102" +
    "\uff6e\104\uff6e\001\002\000\004\007\u025c\001\002\000\004" +
    "\144\u025d\001\002\000\004\034\u025e\001\002\000\136\004" +
    "\070\006\110\010\107\011\uffde\012\105\024\uffde\025\050" +
    "\026\121\027\uffde\030\076\031\115\033\100\035\066\037" +
    "\112\040\101\041\uffde\042\054\043\uffde\044\065\046\064" +
    "\050\063\052\061\054\060\056\056\060\073\062\074\065" +
    "\uffde\066\103\067\116\102\uffde\104\uffde\117\047\120\120" +
    "\121\055\122\051\123\102\124\052\125\106\126\062\127" +
    "\114\130\075\131\104\133\067\143\122\144\123\145\071" +
    "\001\002\000\022\011\uffe0\024\uffe0\027\uffe0\041\uffe0\043" +
    "\uffe0\065\uffe0\102\uffe0\104\uffe0\001\002\000\004\043\u0261" +
    "\001\002\000\136\004\070\006\110\010\107\011\uff8c\012" +
    "\105\024\uff8c\025\050\026\121\027\uff8c\030\076\031\115" +
    "\033\100\035\066\037\112\040\101\041\uff8c\042\054\043" +
    "\uff8c\044\065\046\064\050\063\052\061\054\060\056\056" +
    "\060\073\062\074\065\uff8c\066\103\067\116\102\uff8c\104" +
    "\uff8c\117\047\120\120\121\055\122\051\123\102\124\052" +
    "\125\106\126\062\127\114\130\075\131\104\133\067\143" +
    "\122\144\123\145\071\001\002\000\022\011\uff8b\024\uff8b" +
    "\027\uff8b\041\uff8b\043\uff8b\065\uff8b\102\uff8b\104\uff8b\001" +
    "\002\000\004\007\u0264\001\002\000\004\144\u0265\001\002" +
    "\000\004\051\u0266\001\002\000\136\004\070\006\110\010" +
    "\107\011\uff7f\012\105\024\uff7f\025\050\026\121\027\uff7f" +
    "\030\076\031\115\033\100\035\066\037\112\040\101\041" +
    "\uff7f\042\054\043\uff7f\044\065\046\064\050\063\052\061" +
    "\054\060\056\056\060\073\062\074\065\uff7f\066\103\067" +
    "\116\102\uff7f\104\uff7f\117\047\120\120\121\055\122\051" +
    "\123\102\124\052\125\106\126\062\127\114\130\075\131" +
    "\104\133\067\143\122\144\123\145\071\001\002\000\022" +
    "\011\uff80\024\uff80\027\uff80\041\uff80\043\uff80\065\uff80\102" +
    "\uff80\104\uff80\001\002\000\004\007\u0269\001\002\000\004" +
    "\144\u026a\001\002\000\004\045\u026b\001\002\000\136\004" +
    "\070\006\110\010\107\011\uff83\012\105\024\uff83\025\050" +
    "\026\121\027\uff83\030\076\031\115\033\100\035\066\037" +
    "\112\040\101\041\uff83\042\054\043\uff83\044\065\046\064" +
    "\050\063\052\061\054\060\056\056\060\073\062\074\065" +
    "\uff83\066\103\067\116\102\uff83\104\uff83\117\047\120\120" +
    "\121\055\122\051\123\102\124\052\125\106\126\062\127" +
    "\114\130\075\131\104\133\067\143\122\144\123\145\071" +
    "\001\002\000\022\011\uff84\024\uff84\027\uff84\041\uff84\043" +
    "\uff84\065\uff84\102\uff84\104\uff84\001\002\000\022\011\uffe9" +
    "\024\uffe9\027\uffe9\041\uffe9\043\uffe9\065\uffe9\102\uffe9\104" +
    "\uffe9\001\002\000\004\007\u026f\001\002\000\004\144\u0270" +
    "\001\002\000\004\032\u0271\001\002\000\136\004\070\006" +
    "\110\010\107\011\uffe2\012\105\024\uffe2\025\050\026\121" +
    "\027\uffe2\030\076\031\115\033\100\035\066\037\112\040" +
    "\101\041\uffe2\042\054\043\uffe2\044\065\046\064\050\063" +
    "\052\061\054\060\056\056\060\073\062\074\065\uffe2\066" +
    "\103\067\116\102\uffe2\104\uffe2\117\047\120\120\121\055" +
    "\122\051\123\102\124\052\125\106\126\062\127\114\130" +
    "\075\131\104\133\067\143\122\144\123\145\071\001\002" +
    "\000\022\011\uffe4\024\uffe4\027\uffe4\041\uffe4\043\uffe4\065" +
    "\uffe4\102\uffe4\104\uffe4\001\002\000\004\007\u0274\001\002" +
    "\000\116\004\070\006\110\010\107\012\105\025\050\026" +
    "\121\030\076\031\115\033\100\035\066\037\112\040\101" +
    "\042\054\044\065\046\064\050\063\052\061\054\060\056" +
    "\056\060\073\062\074\066\103\067\116\117\047\120\120" +
    "\121\055\122\051\123\102\124\052\125\106\126\062\127" +
    "\114\130\075\131\104\133\067\143\122\144\123\145\071" +
    "\001\002\000\004\024\u0276\001\002\000\004\015\ufff2\001" +
    "\002\000\004\002\000\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u0275\000\004\003\004\001\001\000\006\002\007\035" +
    "\006\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\004\011\001\001\000" +
    "\004\010\045\001\001\000\006\005\016\007\013\001\001" +
    "\000\004\005\041\001\001\000\004\006\035\001\001\000" +
    "\002\001\001\000\004\007\030\001\001\000\004\036\020" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\006\040\001\001\000\002\001\001\000\004\006\037\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\036\u0272\001\001\000\024\011" +
    "\056\012\110\014\112\015\124\016\123\017\116\020\052" +
    "\021\076\022\071\001\001\000\002\001\001\000\004\036" +
    "\u026d\001\001\000\024\011\u026c\012\110\014\112\015\124" +
    "\016\123\017\116\020\052\021\076\022\071\001\001\000" +
    "\004\036\u0267\001\001\000\004\036\u0262\001\001\000\002" +
    "\001\001\000\024\011\u025f\012\110\014\112\015\124\016" +
    "\123\017\116\020\052\021\076\022\071\001\001\000\004" +
    "\036\u025a\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\036\u024b\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\032\u023d\001\001\000\004\036\u021f\001\001\000\004" +
    "\036\u01e8\001\001\000\004\036\u01e3\001\001\000\002\001" +
    "\001\000\004\024\u01e0\001\001\000\004\024\u01dd\001\001" +
    "\000\004\036\u01ce\001\001\000\024\011\u01cd\012\110\014" +
    "\112\015\124\016\123\017\116\020\052\021\076\022\071" +
    "\001\001\000\002\001\001\000\002\001\001\000\024\011" +
    "\u01c7\012\110\014\112\015\124\016\123\017\116\020\052" +
    "\021\076\022\071\001\001\000\004\036\u01c2\001\001\000" +
    "\006\025\u0179\030\u0178\001\001\000\004\036\u0168\001\001" +
    "\000\014\023\u012e\031\u012c\033\u012b\034\u012a\036\u0131\001" +
    "\001\000\004\036\u0124\001\001\000\004\036\u010d\001\001" +
    "\000\024\011\u010c\012\110\014\112\015\124\016\123\017" +
    "\116\020\052\021\076\022\071\001\001\000\002\001\001" +
    "\000\004\036\u0107\001\001\000\002\001\001\000\004\036" +
    "\u0102\001\001\000\002\001\001\000\006\025\150\030\145" +
    "\001\001\000\002\001\001\000\004\036\136\001\001\000" +
    "\024\011\133\012\110\014\112\015\124\016\123\017\116" +
    "\020\052\021\076\022\071\001\001\000\004\036\126\001" +
    "\001\000\024\011\125\012\110\014\112\015\124\016\123" +
    "\017\116\020\052\021\076\022\071\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\024\011\130\012\110\014\112\015\124\016\123\017" +
    "\116\020\052\021\076\022\071\001\001\000\002\001\001" +
    "\000\024\011\132\012\110\014\112\015\124\016\123\017" +
    "\116\020\052\021\076\022\071\001\001\000\002\001\001" +
    "\000\002\001\001\000\024\011\135\012\110\014\112\015" +
    "\124\016\123\017\116\020\052\021\076\022\071\001\001" +
    "\000\002\001\001\000\002\001\001\000\024\011\140\012" +
    "\110\014\112\015\124\016\123\017\116\020\052\021\076" +
    "\022\071\001\001\000\002\001\001\000\024\011\142\012" +
    "\110\014\112\015\124\016\123\017\116\020\052\021\076" +
    "\022\071\001\001\000\002\001\001\000\004\030\375\001" +
    "\001\000\004\036\370\001\001\000\002\001\001\000\004" +
    "\013\344\001\001\000\004\036\340\001\001\000\006\026" +
    "\324\027\325\001\001\000\004\036\202\001\001\000\004" +
    "\037\155\001\001\000\024\011\177\012\110\014\112\015" +
    "\124\016\123\017\116\020\052\021\076\022\071\001\001" +
    "\000\004\036\172\001\001\000\002\001\001\000\024\011" +
    "\165\012\110\014\112\015\124\016\123\017\116\020\052" +
    "\021\076\022\071\001\001\000\004\036\160\001\001\000" +
    "\002\001\001\000\024\011\162\012\110\014\112\015\124" +
    "\016\123\017\116\020\052\021\076\022\071\001\001\000" +
    "\002\001\001\000\004\037\164\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\037\167\001\001\000\002\001" +
    "\001\000\004\030\171\001\001\000\002\001\001\000\002" +
    "\001\001\000\024\011\174\012\110\014\112\015\124\016" +
    "\123\017\116\020\052\021\076\022\071\001\001\000\002" +
    "\001\001\000\004\037\176\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\037\201\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\013\205\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\013\252\001\001\000\004" +
    "\036\245\001\001\000\004\032\235\001\001\000\004\013" +
    "\232\001\001\000\002\001\001\000\004\036\222\001\001" +
    "\000\004\036\215\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\013\221\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\013\226\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\013\231\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\013\237\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\032\242\001\001\000\002\001\001" +
    "\000\004\013\244\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\013\251" +
    "\001\001\000\002\001\001\000\002\001\001\000\010\013" +
    "\255\025\254\030\256\001\001\000\006\026\271\027\272" +
    "\001\001\000\002\001\001\000\002\001\001\000\024\011" +
    "\260\012\110\014\112\015\124\016\123\017\116\020\052" +
    "\021\076\022\071\001\001\000\002\001\001\000\004\030" +
    "\262\001\001\000\002\001\001\000\024\011\264\012\110" +
    "\014\112\015\124\016\123\017\116\020\052\021\076\022" +
    "\071\001\001\000\002\001\001\000\004\036\315\001\001" +
    "\000\004\036\311\001\001\000\004\030\307\001\001\000" +
    "\004\030\305\001\001\000\004\027\301\001\001\000\004" +
    "\026\274\001\001\000\024\011\277\012\110\014\112\015" +
    "\124\016\123\017\116\020\052\021\076\022\071\001\001" +
    "\000\002\001\001\000\024\011\276\012\110\014\112\015" +
    "\124\016\123\017\116\020\052\021\076\022\071\001\001" +
    "\000\002\001\001\000\002\001\001\000\024\011\304\012" +
    "\110\014\112\015\124\016\123\017\116\020\052\021\076" +
    "\022\071\001\001\000\002\001\001\000\024\011\303\012" +
    "\110\014\112\015\124\016\123\017\116\020\052\021\076" +
    "\022\071\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\030\313\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\030\317\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\013\323\001\001\000\002\001\001" +
    "\000\004\027\334\001\001\000\004\026\327\001\001\000" +
    "\024\011\332\012\110\014\112\015\124\016\123\017\116" +
    "\020\052\021\076\022\071\001\001\000\002\001\001\000" +
    "\024\011\331\012\110\014\112\015\124\016\123\017\116" +
    "\020\052\021\076\022\071\001\001\000\002\001\001\000" +
    "\002\001\001\000\024\011\337\012\110\014\112\015\124" +
    "\016\123\017\116\020\052\021\076\022\071\001\001\000" +
    "\002\001\001\000\024\011\336\012\110\014\112\015\124" +
    "\016\123\017\116\020\052\021\076\022\071\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\030\342\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\025\347\030\346\001\001\000\002" +
    "\001\001\000\006\026\350\027\351\001\001\000\004\027" +
    "\360\001\001\000\004\026\353\001\001\000\024\011\356" +
    "\012\110\014\112\015\124\016\123\017\116\020\052\021" +
    "\076\022\071\001\001\000\002\001\001\000\024\011\355" +
    "\012\110\014\112\015\124\016\123\017\116\020\052\021" +
    "\076\022\071\001\001\000\002\001\001\000\002\001\001" +
    "\000\024\011\363\012\110\014\112\015\124\016\123\017" +
    "\116\020\052\021\076\022\071\001\001\000\002\001\001" +
    "\000\024\011\362\012\110\014\112\015\124\016\123\017" +
    "\116\020\052\021\076\022\071\001\001\000\002\001\001" +
    "\000\002\001\001\000\024\011\365\012\110\014\112\015" +
    "\124\016\123\017\116\020\052\021\076\022\071\001\001" +
    "\000\002\001\001\000\024\011\367\012\110\014\112\015" +
    "\124\016\123\017\116\020\052\021\076\022\071\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\037\372\001" +
    "\001\000\002\001\001\000\004\030\374\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\024\011\u0101\012\110\014\112\015\124\016\123" +
    "\017\116\020\052\021\076\022\071\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\024\011\u0106\012\110\014\112\015\124\016\123\017" +
    "\116\020\052\021\076\022\071\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\024\011\u010b\012\110\014\112\015\124\016\123\017\116" +
    "\020\052\021\076\022\071\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\024\011\u0116\012\110\014\112\015\124\016" +
    "\123\017\116\020\052\021\076\022\071\001\001\000\002" +
    "\001\001\000\024\011\u0113\012\110\014\112\015\124\016" +
    "\123\017\116\020\052\021\076\022\071\001\001\000\002" +
    "\001\001\000\024\011\u0115\012\110\014\112\015\124\016" +
    "\123\017\116\020\052\021\076\022\071\001\001\000\002" +
    "\001\001\000\002\001\001\000\024\011\u0118\012\110\014" +
    "\112\015\124\016\123\017\116\020\052\021\076\022\071" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\024\011\u0121\012\110\014\112\015\124\016\123" +
    "\017\116\020\052\021\076\022\071\001\001\000\002\001" +
    "\001\000\024\011\u011e\012\110\014\112\015\124\016\123" +
    "\017\116\020\052\021\076\022\071\001\001\000\002\001" +
    "\001\000\024\011\u0120\012\110\014\112\015\124\016\123" +
    "\017\116\020\052\021\076\022\071\001\001\000\002\001" +
    "\001\000\002\001\001\000\024\011\u0123\012\110\014\112" +
    "\015\124\016\123\017\116\020\052\021\076\022\071\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\024\011\u0128\012\110\014\112\015" +
    "\124\016\123\017\116\020\052\021\076\022\071\001\001" +
    "\000\002\001\001\000\010\031\u0160\033\u015f\034\u015e\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\010\031\u0139\033" +
    "\u0138\034\u0136\001\001\000\002\001\001\000\012\023\u0132" +
    "\031\u012c\033\u012b\034\u012a\001\001\000\002\001\001\000" +
    "\024\011\u0134\012\110\014\112\015\124\016\123\017\116" +
    "\020\052\021\076\022\071\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\010\031\u0140\033\u013f" +
    "\034\u013e\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\034\u013c\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\024\011\u0143\012\110" +
    "\014\112\015\124\016\123\017\116\020\052\021\076\022" +
    "\071\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\034\u014f\001\001\000\004\034\u014b\001\001" +
    "\000\002\001\001\000\004\034\u014d\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\034\u0151" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\033" +
    "\u015a\001\001\000\004\033\u0157\001\001\000\002\001\001" +
    "\000\004\033\u0159\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\033\u015c" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\010\031\u0164" +
    "\033\u0163\034\u0162\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\024\u016b\001" +
    "\001\000\002\001\001\000\002\001\001\000\024\011\u016d" +
    "\012\110\014\112\015\124\016\123\017\116\020\052\021" +
    "\076\022\071\001\001\000\002\001\001\000\004\024\u016f" +
    "\001\001\000\002\001\001\000\024\011\u0171\012\110\014" +
    "\112\015\124\016\123\017\116\020\052\021\076\022\071" +
    "\001\001\000\002\001\001\000\002\001\001\000\024\011" +
    "\u0174\012\110\014\112\015\124\016\123\017\116\020\052" +
    "\021\076\022\071\001\001\000\002\001\001\000\004\024" +
    "\u0176\001\001\000\002\001\001\000\004\013\u01b0\001\001" +
    "\000\002\001\001\000\006\026\u01a2\027\u01a3\001\001\000" +
    "\004\036\u017b\001\001\000\002\001\001\000\006\013\u017e" +
    "\025\u017d\001\001\000\006\026\u0196\027\u0197\001\001\000" +
    "\002\001\001\000\004\025\u0180\001\001\000\006\026\u0181" +
    "\027\u0182\001\001\000\004\027\u0192\001\001\000\004\026" +
    "\u0184\001\001\000\002\001\001\000\002\001\001\000\024" +
    "\011\u0186\012\110\014\112\015\124\016\123\017\116\020" +
    "\052\021\076\022\071\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\036\u0189\001\001\000\002\001\001\000" +
    "\004\013\u018b\001\001\000\002\001\001\000\004\025\u018d" +
    "\001\001\000\004\027\u018e\001\001\000\002\001\001\000" +
    "\024\011\u0190\012\110\014\112\015\124\016\123\017\116" +
    "\020\052\021\076\022\071\001\001\000\002\001\001\000" +
    "\024\011\u0195\012\110\014\112\015\124\016\123\017\116" +
    "\020\052\021\076\022\071\001\001\000\002\001\001\000" +
    "\024\011\u0194\012\110\014\112\015\124\016\123\017\116" +
    "\020\052\021\076\022\071\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\027\u019e\001\001\000\004\026\u0199" +
    "\001\001\000\024\011\u019c\012\110\014\112\015\124\016" +
    "\123\017\116\020\052\021\076\022\071\001\001\000\002" +
    "\001\001\000\024\011\u019b\012\110\014\112\015\124\016" +
    "\123\017\116\020\052\021\076\022\071\001\001\000\002" +
    "\001\001\000\002\001\001\000\024\011\u01a1\012\110\014" +
    "\112\015\124\016\123\017\116\020\052\021\076\022\071" +
    "\001\001\000\002\001\001\000\024\011\u01a0\012\110\014" +
    "\112\015\124\016\123\017\116\020\052\021\076\022\071" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\027" +
    "\u01aa\001\001\000\004\026\u01a5\001\001\000\024\011\u01a8" +
    "\012\110\014\112\015\124\016\123\017\116\020\052\021" +
    "\076\022\071\001\001\000\002\001\001\000\024\011\u01a7" +
    "\012\110\014\112\015\124\016\123\017\116\020\052\021" +
    "\076\022\071\001\001\000\002\001\001\000\002\001\001" +
    "\000\024\011\u01ad\012\110\014\112\015\124\016\123\017" +
    "\116\020\052\021\076\022\071\001\001\000\002\001\001" +
    "\000\024\011\u01ac\012\110\014\112\015\124\016\123\017" +
    "\116\020\052\021\076\022\071\001\001\000\002\001\001" +
    "\000\002\001\001\000\024\011\u01af\012\110\014\112\015" +
    "\124\016\123\017\116\020\052\021\076\022\071\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\025\u01b3\030" +
    "\u01b2\001\001\000\002\001\001\000\006\026\u01b4\027\u01b5" +
    "\001\001\000\004\027\u01bc\001\001\000\004\026\u01b7\001" +
    "\001\000\024\011\u01ba\012\110\014\112\015\124\016\123" +
    "\017\116\020\052\021\076\022\071\001\001\000\002\001" +
    "\001\000\024\011\u01b9\012\110\014\112\015\124\016\123" +
    "\017\116\020\052\021\076\022\071\001\001\000\002\001" +
    "\001\000\002\001\001\000\024\011\u01bf\012\110\014\112" +
    "\015\124\016\123\017\116\020\052\021\076\022\071\001" +
    "\001\000\002\001\001\000\024\011\u01be\012\110\014\112" +
    "\015\124\016\123\017\116\020\052\021\076\022\071\001" +
    "\001\000\002\001\001\000\002\001\001\000\024\011\u01c1" +
    "\012\110\014\112\015\124\016\123\017\116\020\052\021" +
    "\076\022\071\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\024\011\u01c6\012" +
    "\110\014\112\015\124\016\123\017\116\020\052\021\076" +
    "\022\071\001\001\000\002\001\001\000\002\001\001\000" +
    "\024\011\u01c9\012\110\014\112\015\124\016\123\017\116" +
    "\020\052\021\076\022\071\001\001\000\002\001\001\000" +
    "\002\001\001\000\024\011\u01cc\012\110\014\112\015\124" +
    "\016\123\017\116\020\052\021\076\022\071\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\024\u01d1\001\001\000\002\001\001\000" +
    "\024\011\u01d3\012\110\014\112\015\124\016\123\017\116" +
    "\020\052\021\076\022\071\001\001\000\002\001\001\000" +
    "\004\024\u01da\001\001\000\002\001\001\000\004\024\u01d7" +
    "\001\001\000\002\001\001\000\024\011\u01d9\012\110\014" +
    "\112\015\124\016\123\017\116\020\052\021\076\022\071" +
    "\001\001\000\002\001\001\000\002\001\001\000\024\011" +
    "\u01dc\012\110\014\112\015\124\016\123\017\116\020\052" +
    "\021\076\022\071\001\001\000\002\001\001\000\002\001" +
    "\001\000\024\011\u01df\012\110\014\112\015\124\016\123" +
    "\017\116\020\052\021\076\022\071\001\001\000\002\001" +
    "\001\000\002\001\001\000\024\011\u01e2\012\110\014\112" +
    "\015\124\016\123\017\116\020\052\021\076\022\071\001" +
    "\001\000\002\001\001\000\002\001\001\000\024\011\u01e5" +
    "\012\110\014\112\015\124\016\123\017\116\020\052\021" +
    "\076\022\071\001\001\000\002\001\001\000\024\011\u01e7" +
    "\012\110\014\112\015\124\016\123\017\116\020\052\021" +
    "\076\022\071\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\025\u01ec\030\u01ea\001\001\000\002\001\001\000" +
    "\004\013\u020b\001\001\000\006\026\u01ff\027\u0200\001\001" +
    "\000\004\036\u01ee\001\001\000\002\001\001\000\004\013" +
    "\u01f0\001\001\000\002\001\001\000\004\025\u01f2\001\001" +
    "\000\006\026\u01f3\027\u01f4\001\001\000\004\027\u01fb\001" +
    "\001\000\004\026\u01f6\001\001\000\024\011\u01f9\012\110" +
    "\014\112\015\124\016\123\017\116\020\052\021\076\022" +
    "\071\001\001\000\002\001\001\000\024\011\u01f8\012\110" +
    "\014\112\015\124\016\123\017\116\020\052\021\076\022" +
    "\071\001\001\000\002\001\001\000\002\001\001\000\024" +
    "\011\u01fe\012\110\014\112\015\124\016\123\017\116\020" +
    "\052\021\076\022\071\001\001\000\002\001\001\000\024" +
    "\011\u01fd\012\110\014\112\015\124\016\123\017\116\020" +
    "\052\021\076\022\071\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\027\u0207\001\001\000\004\026\u0202\001" +
    "\001\000\024\011\u0205\012\110\014\112\015\124\016\123" +
    "\017\116\020\052\021\076\022\071\001\001\000\002\001" +
    "\001\000\024\011\u0204\012\110\014\112\015\124\016\123" +
    "\017\116\020\052\021\076\022\071\001\001\000\002\001" +
    "\001\000\002\001\001\000\024\011\u020a\012\110\014\112" +
    "\015\124\016\123\017\116\020\052\021\076\022\071\001" +
    "\001\000\002\001\001\000\024\011\u0209\012\110\014\112" +
    "\015\124\016\123\017\116\020\052\021\076\022\071\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\025\u020e\030\u020d\001\001\000\002\001\001\000" +
    "\006\026\u020f\027\u0210\001\001\000\004\027\u0217\001\001" +
    "\000\004\026\u0212\001\001\000\024\011\u0215\012\110\014" +
    "\112\015\124\016\123\017\116\020\052\021\076\022\071" +
    "\001\001\000\002\001\001\000\024\011\u0214\012\110\014" +
    "\112\015\124\016\123\017\116\020\052\021\076\022\071" +
    "\001\001\000\002\001\001\000\002\001\001\000\024\011" +
    "\u021a\012\110\014\112\015\124\016\123\017\116\020\052" +
    "\021\076\022\071\001\001\000\002\001\001\000\024\011" +
    "\u0219\012\110\014\112\015\124\016\123\017\116\020\052" +
    "\021\076\022\071\001\001\000\002\001\001\000\002\001" +
    "\001\000\024\011\u021c\012\110\014\112\015\124\016\123" +
    "\017\116\020\052\021\076\022\071\001\001\000\002\001" +
    "\001\000\024\011\u021e\012\110\014\112\015\124\016\123" +
    "\017\116\020\052\021\076\022\071\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\030\u0221\001\001\000\002" +
    "\001\001\000\004\013\u0235\001\001\000\004\036\u0224\001" +
    "\001\000\002\001\001\000\004\013\u0226\001\001\000\002" +
    "\001\001\000\004\025\u0228\001\001\000\006\026\u0229\027" +
    "\u022a\001\001\000\004\027\u0231\001\001\000\004\026\u022c" +
    "\001\001\000\024\011\u022f\012\110\014\112\015\124\016" +
    "\123\017\116\020\052\021\076\022\071\001\001\000\002" +
    "\001\001\000\024\011\u022e\012\110\014\112\015\124\016" +
    "\123\017\116\020\052\021\076\022\071\001\001\000\002" +
    "\001\001\000\002\001\001\000\024\011\u0234\012\110\014" +
    "\112\015\124\016\123\017\116\020\052\021\076\022\071" +
    "\001\001\000\002\001\001\000\024\011\u0233\012\110\014" +
    "\112\015\124\016\123\017\116\020\052\021\076\022\071" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\030\u0237\001\001\000\002\001\001\000\024" +
    "\011\u0239\012\110\014\112\015\124\016\123\017\116\020" +
    "\052\021\076\022\071\001\001\000\002\001\001\000\024" +
    "\011\u023b\012\110\014\112\015\124\016\123\017\116\020" +
    "\052\021\076\022\071\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\024\011\u023f\012\110\014" +
    "\112\015\124\016\123\017\116\020\052\021\076\022\071" +
    "\001\001\000\002\001\001\000\024\011\u0241\012\110\014" +
    "\112\015\124\016\123\017\116\020\052\021\076\022\071" +
    "\001\001\000\002\001\001\000\002\001\001\000\024\011" +
    "\u0244\012\110\014\112\015\124\016\123\017\116\020\052" +
    "\021\076\022\071\001\001\000\002\001\001\000\002\001" +
    "\001\000\024\011\u0247\012\110\014\112\015\124\016\123" +
    "\017\116\020\052\021\076\022\071\001\001\000\002\001" +
    "\001\000\002\001\001\000\024\011\u024a\012\110\014\112" +
    "\015\124\016\123\017\116\020\052\021\076\022\071\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\024\011\u024f\012\110\014\112\015" +
    "\124\016\123\017\116\020\052\021\076\022\071\001\001" +
    "\000\002\001\001\000\002\001\001\000\024\011\u0252\012" +
    "\110\014\112\015\124\016\123\017\116\020\052\021\076" +
    "\022\071\001\001\000\002\001\001\000\002\001\001\000" +
    "\024\011\u0255\012\110\014\112\015\124\016\123\017\116" +
    "\020\052\021\076\022\071\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\024\011\u0259\012\110" +
    "\014\112\015\124\016\123\017\116\020\052\021\076\022" +
    "\071\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\024\011\u025e\012\110\014" +
    "\112\015\124\016\123\017\116\020\052\021\076\022\071" +
    "\001\001\000\002\001\001\000\002\001\001\000\024\011" +
    "\u0261\012\110\014\112\015\124\016\123\017\116\020\052" +
    "\021\076\022\071\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\024\011\u0266" +
    "\012\110\014\112\015\124\016\123\017\116\020\052\021" +
    "\076\022\071\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\024\011\u026b\012" +
    "\110\014\112\015\124\016\123\017\116\020\052\021\076" +
    "\022\071\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\024" +
    "\011\u0271\012\110\014\112\015\124\016\123\017\116\020" +
    "\052\021\076\022\071\001\001\000\002\001\001\000\002" +
    "\001\001\000\024\011\u0274\012\110\014\112\015\124\016" +
    "\123\017\116\020\052\021\076\022\071\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Sintax$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Sintax$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Sintax$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    private Symbol s;
    
    public void syntax_error(Symbol s){
        this.s = s;
    }

    public Symbol getS(){
        return this.s;
}

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$Sintax$actions {
  private final Sintax parser;

  /** Constructor */
  CUP$Sintax$actions(Sintax parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$Sintax$do_action(
    int                        CUP$Sintax$act_num,
    java_cup.runtime.lr_parser CUP$Sintax$parser,
    java.util.Stack            CUP$Sintax$stack,
    int                        CUP$Sintax$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Sintax$result;

      /* select the action based on the action number */
      switch (CUP$Sintax$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 301: // ATG ::= AtributogeneralID AtributogeneralCLASS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ATG",28, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 300: // ATG ::= AtributogeneralCLASS AtributogeneralID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ATG",28, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 299: // ATG ::= AtributogeneralID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ATG",28, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 298: // ATG ::= AtributogeneralCLASS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ATG",28, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 297: // PROD ::= InicioDefilaConAtributo ATG FinEtiqueta GLO CierreDeFila 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PROD",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 296: // PROD ::= InicioDefilaConAtributo ATG FinEtiqueta GLO CierreDeFila PROD 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PROD",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 295: // PROD ::= InicioDefila GLO CierreDeFila 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PROD",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 294: // PROD ::= InicioDefila GLO CierreDeFila PROD 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PROD",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 293: // GLO ::= InicioDeColumnaConAtributo ATG FinEtiqueta SENTENCIA CierreDeColumna 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("GLO",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 292: // GLO ::= InicioDeColumnaConAtributo ATG FinEtiqueta SENTENCIA CierreDeColumna GLO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("GLO",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 291: // GLO ::= InicioDeColumna SENTENCIA CierreDeColumna 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("GLO",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 290: // GLO ::= InicioDeColumna SENTENCIA CierreDeColumna GLO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("GLO",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 289: // GLO ::= InicioDeCeldaConAtributo ATG FinEtiqueta SENTENCIA CierreDeCelda 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("GLO",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 288: // GLO ::= InicioDeCeldaConAtributo ATG FinEtiqueta SENTENCIA CierreDeCelda GLO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("GLO",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 287: // GLO ::= InicioDeCelda SENTENCIA CierreDeCelda 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("GLO",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 286: // GLO ::= InicioDeCelda SENTENCIA CierreDeCelda GLO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("GLO",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 285: // CUERPO ::= InicioDeCuerpoDeTablaConAtributo ATG FinEtiqueta PROD FinDeCuerpoDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CUERPO",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 284: // CUERPO ::= InicioDeCuerpoDeTabla PROD FinDeCuerpoDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CUERPO",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 283: // PIE ::= InicioDePieDeTablaConAtributo ATG FinEtiqueta PROD FinDePieDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PIE",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 282: // PIE ::= InicioDePieDeTabla PROD FinDePieDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PIE",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 281: // CABEZA ::= InicioDeCabezaDeTablaConAtributo ATG FinEtiqueta PROD CierreDeCabezaDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CABEZA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 280: // CABEZA ::= InicioDeCabezaDeTabla PROD CierreDeCabezaDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CABEZA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 279: // TAB ::= InicioDeTabla InicioDeTituloDeTablaConAtributo ATG FinEtiqueta Q FinDeTituloDeTabla PROD CierreDeTabla SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 278: // TAB ::= InicioDeTabla InicioDeTituloDeTablaConAtributo ATG FinEtiqueta Q FinDeTituloDeTabla Q FinDeTituloDeTabla PROD CierreDeTabla SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 277: // TAB ::= InicioDeTabla InicioDeTituloDeTablaConAtributo ATG FinEtiqueta Q FinDeTituloDeTabla PROD CierreDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 276: // TAB ::= InicioDeTabla InicioDeTituloDeTablaConAtributo ATG FinEtiqueta Q FinDeTituloDeTabla Q FinDeTituloDeTabla PROD CierreDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 275: // TAB ::= InicioDeTabla InicioDeTituloDeTablaConAtributo ATG FinEtiqueta Q FinDeTituloDeTabla CABEZA CUERPO CierreDeTabla SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 274: // TAB ::= InicioDeTabla InicioDeTituloDeTablaConAtributo ATG FinEtiqueta Q FinDeTituloDeTabla CABEZA CUERPO CierreDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 273: // TAB ::= InicioDeTabla InicioDeTituloDeTablaConAtributo ATG FinEtiqueta Q FinDeTituloDeTabla CABEZA PIE CierreDeTabla SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 272: // TAB ::= InicioDeTabla InicioDeTituloDeTablaConAtributo ATG FinEtiqueta Q FinDeTituloDeTabla CABEZA PIE CierreDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 271: // TAB ::= InicioDeTabla InicioDeTituloDeTablaConAtributo ATG FinEtiqueta Q FinDeTituloDeTabla CABEZA CUERPO PIE CierreDeTabla SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 270: // TAB ::= InicioDeTabla InicioDeTituloDeTablaConAtributo ATG FinEtiqueta Q FinDeTituloDeTabla CABEZA CUERPO PIE CierreDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 269: // TAB ::= InicioDeTabla InicioDeTituloDeTablaConAtributo ATG FinEtiqueta Q FinDeTituloDeTabla CABEZA PIE CUERPO CierreDeTabla SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 268: // TAB ::= InicioDeTabla InicioDeTituloDeTablaConAtributo ATG FinEtiqueta Q FinDeTituloDeTabla CABEZA PIE CUERPO CierreDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 267: // TAB ::= InicioDeTablaConAtributo ATG FinEtiqueta PROD CierreDeTabla SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 266: // TAB ::= InicioDeTablaConAtributo ATG FinEtiqueta InicioDeTituloDeTabla Q FinDeTituloDeTabla PROD CierreDeTabla SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 265: // TAB ::= InicioDeTablaConAtributo ATG FinEtiqueta PROD CierreDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 264: // TAB ::= InicioDeTablaConAtributo ATG FinEtiqueta InicioDeTituloDeTabla Q FinDeTituloDeTabla PROD CierreDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 263: // TAB ::= InicioDeTablaConAtributo ATG FinEtiqueta InicioDeTituloDeTablaConAtributo ATG FinEtiqueta Q FinDeTituloDeTabla CABEZA CUERPO CierreDeTabla SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 262: // TAB ::= InicioDeTablaConAtributo ATG FinEtiqueta InicioDeTituloDeTablaConAtributo ATG FinEtiqueta Q FinDeTituloDeTabla CABEZA CUERPO CierreDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 261: // TAB ::= InicioDeTablaConAtributo ATG FinEtiqueta InicioDeTituloDeTablaConAtributo ATG FinEtiqueta Q FinDeTituloDeTabla CABEZA PIE CierreDeTabla SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 260: // TAB ::= InicioDeTablaConAtributo ATG FinEtiqueta InicioDeTituloDeTablaConAtributo ATG FinEtiqueta Q FinDeTituloDeTabla CABEZA PIE CierreDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 259: // TAB ::= InicioDeTablaConAtributo ATG FinEtiqueta InicioDeTituloDeTablaConAtributo ATG FinEtiqueta Q FinDeTituloDeTabla CABEZA CUERPO PIE CierreDeTabla SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-12)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 258: // TAB ::= InicioDeTablaConAtributo ATG FinEtiqueta InicioDeTituloDeTablaConAtributo ATG FinEtiqueta Q FinDeTituloDeTabla CABEZA CUERPO PIE CierreDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 257: // TAB ::= InicioDeTablaConAtributo ATG FinEtiqueta InicioDeTituloDeTablaConAtributo ATG FinEtiqueta Q FinDeTituloDeTabla CABEZA PIE CUERPO CierreDeTabla SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-12)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 256: // TAB ::= InicioDeTablaConAtributo ATG FinEtiqueta InicioDeTituloDeTablaConAtributo ATG FinEtiqueta Q FinDeTituloDeTabla CABEZA PIE CUERPO CierreDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 255: // TAB ::= InicioDeTablaConAtributo ATG FinEtiqueta InicioDeTituloDeTabla Q FinDeTituloDeTabla CABEZA CUERPO CierreDeTabla SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 254: // TAB ::= InicioDeTablaConAtributo ATG FinEtiqueta CABEZA CUERPO CierreDeTabla SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 253: // TAB ::= InicioDeTablaConAtributo ATG FinEtiqueta InicioDeTituloDeTabla Q FinDeTituloDeTabla CABEZA CUERPO CierreDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 252: // TAB ::= InicioDeTablaConAtributo ATG FinEtiqueta CABEZA CUERPO CierreDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 251: // TAB ::= InicioDeTablaConAtributo ATG FinEtiqueta InicioDeTituloDeTabla Q FinDeTituloDeTabla CABEZA PIE CierreDeTabla SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 250: // TAB ::= InicioDeTablaConAtributo ATG FinEtiqueta CABEZA PIE CierreDeTabla SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 249: // TAB ::= InicioDeTablaConAtributo ATG FinEtiqueta InicioDeTituloDeTabla Q FinDeTituloDeTabla CABEZA PIE CierreDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 248: // TAB ::= InicioDeTablaConAtributo ATG FinEtiqueta CABEZA PIE CierreDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 247: // TAB ::= InicioDeTablaConAtributo ATG FinEtiqueta InicioDeTituloDeTabla Q FinDeTituloDeTabla CABEZA CUERPO PIE CierreDeTabla SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 246: // TAB ::= InicioDeTablaConAtributo ATG FinEtiqueta CABEZA CUERPO PIE CierreDeTabla SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 245: // TAB ::= InicioDeTablaConAtributo ATG FinEtiqueta InicioDeTituloDeTabla Q FinDeTituloDeTabla CABEZA CUERPO PIE CierreDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 244: // TAB ::= InicioDeTablaConAtributo ATG FinEtiqueta CABEZA CUERPO PIE CierreDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 243: // TAB ::= InicioDeTablaConAtributo ATG FinEtiqueta InicioDeTituloDeTabla Q FinDeTituloDeTabla CABEZA PIE CUERPO CierreDeTabla SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 242: // TAB ::= InicioDeTablaConAtributo ATG FinEtiqueta CABEZA PIE CUERPO CierreDeTabla SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 241: // TAB ::= InicioDeTablaConAtributo ATG FinEtiqueta InicioDeTituloDeTabla Q FinDeTituloDeTabla CABEZA PIE CUERPO CierreDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 240: // TAB ::= InicioDeTablaConAtributo ATG FinEtiqueta CABEZA PIE CUERPO CierreDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 239: // TAB ::= InicioDeTabla PROD CierreDeTabla SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 238: // TAB ::= InicioDeTabla InicioDeTituloDeTabla Q FinDeTituloDeTabla PROD CierreDeTabla SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 237: // TAB ::= InicioDeTabla PROD CierreDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 236: // TAB ::= InicioDeTabla InicioDeTituloDeTabla Q FinDeTituloDeTabla PROD CierreDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 235: // TAB ::= InicioDeTabla InicioDeTituloDeTabla Q FinDeTituloDeTabla CABEZA CUERPO CierreDeTabla SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 234: // TAB ::= InicioDeTabla CABEZA CUERPO CierreDeTabla SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 233: // TAB ::= InicioDeTabla InicioDeTituloDeTabla Q FinDeTituloDeTabla CABEZA CUERPO CierreDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 232: // TAB ::= InicioDeTabla CABEZA CUERPO CierreDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 231: // TAB ::= InicioDeTabla InicioDeTituloDeTabla Q FinDeTituloDeTabla CABEZA PIE CierreDeTabla SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 230: // TAB ::= InicioDeTabla CABEZA PIE CierreDeTabla SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 229: // TAB ::= InicioDeTabla InicioDeTituloDeTabla Q FinDeTituloDeTabla CABEZA PIE CierreDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 228: // TAB ::= InicioDeTabla CABEZA PIE CierreDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 227: // TAB ::= InicioDeTabla InicioDeTituloDeTabla Q FinDeTituloDeTabla CABEZA CUERPO PIE CierreDeTabla SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 226: // TAB ::= InicioDeTabla CABEZA CUERPO PIE CierreDeTabla SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // TAB ::= InicioDeTabla InicioDeTituloDeTabla Q FinDeTituloDeTabla CABEZA CUERPO PIE CierreDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // TAB ::= InicioDeTabla CABEZA CUERPO PIE CierreDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // TAB ::= InicioDeTabla InicioDeTituloDeTabla Q FinDeTituloDeTabla CABEZA PIE CUERPO CierreDeTabla SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // TAB ::= InicioDeTabla CABEZA PIE CUERPO CierreDeTabla SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // TAB ::= InicioDeTabla InicioDeTituloDeTabla Q FinDeTituloDeTabla CABEZA PIE CUERPO CierreDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // TAB ::= InicioDeTabla CABEZA PIE CUERPO CierreDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // TAB ::= TablaConBordeConAtributo ATG FinEtiqueta InicioDeTituloDeTabla Q FinDeTituloDeTabla PROD CierreDeTabla SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // TAB ::= TablaConBordeConAtributo ATG FinEtiqueta InicioDeTituloDeTabla Q FinDeTituloDeTabla PROD CierreDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // TAB ::= TablaConBordeConAtributo ATG FinEtiqueta PROD CierreDeTabla SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // TAB ::= TablaConBordeConAtributo ATG FinEtiqueta PROD CierreDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // TAB ::= TablaConBorde InicioDeTituloDeTabla Q FinDeTituloDeTabla PROD CierreDeTabla SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // TAB ::= TablaConBorde InicioDeTituloDeTabla Q FinDeTituloDeTabla PROD CierreDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // TAB ::= TablaConBorde PROD CierreDeTabla SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // TAB ::= TablaConBorde PROD CierreDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // TAB ::= TablaConBorde InicioDeTituloDeTablaConAtributo ATG FinEtiqueta Q FinDeTituloDeTabla CABEZA PIE CierreDeTabla SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // TAB ::= TablaConBorde InicioDeTituloDeTablaConAtributo ATG FinEtiqueta Q FinDeTituloDeTabla CABEZA PIE CierreDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // TAB ::= TablaConBorde InicioDeTituloDeTablaConAtributo ATG FinEtiqueta Q FinDeTituloDeTabla CABEZA CUERPO CierreDeTabla TablaConBorde InicioDeTituloDeTablaConAtributo ATG FinEtiqueta Q FinDeTituloDeTabla CABEZA CUERPO CierreDeTabla SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-18)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // TAB ::= TablaConBorde InicioDeTituloDeTablaConAtributo ATG FinEtiqueta Q FinDeTituloDeTabla CABEZA CUERPO PIE CierreDeTabla SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // TAB ::= TablaConBorde InicioDeTituloDeTablaConAtributo ATG FinEtiqueta Q FinDeTituloDeTabla CABEZA CUERPO PIE CierreDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // TAB ::= TablaConBorde InicioDeTituloDeTablaConAtributo ATG FinEtiqueta Q FinDeTituloDeTabla CABEZA PIE CUERPO CierreDeTabla SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // TAB ::= TablaConBorde InicioDeTituloDeTablaConAtributo ATG FinEtiqueta Q FinDeTituloDeTabla CABEZA PIE CUERPO CierreDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // TAB ::= TablaConBordeConAtributo ATG FinEtiqueta InicioDeTituloDeTablaConAtributo ATG FinEtiqueta Q FinDeTituloDeTabla CABEZA PIE CierreDeTabla SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // TAB ::= TablaConBordeConAtributo ATG FinEtiqueta InicioDeTituloDeTablaConAtributo ATG FinEtiqueta Q FinDeTituloDeTabla CABEZA PIE CierreDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // TAB ::= TablaConBordeConAtributo ATG FinEtiqueta InicioDeTituloDeTablaConAtributo ATG FinEtiqueta Q FinDeTituloDeTabla CABEZA CUERPO CierreDeTabla SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // TAB ::= TablaConBordeConAtributo ATG FinEtiqueta InicioDeTituloDeTablaConAtributo ATG FinEtiqueta Q FinDeTituloDeTabla CABEZA CUERPO CierreDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // TAB ::= TablaConBordeConAtributo ATG FinEtiqueta InicioDeTituloDeTablaConAtributo ATG FinEtiqueta Q FinDeTituloDeTabla CABEZA CUERPO PIE CierreDeTabla SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-12)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // TAB ::= TablaConBordeConAtributo ATG FinEtiqueta InicioDeTituloDeTablaConAtributo ATG FinEtiqueta Q FinDeTituloDeTabla CABEZA CUERPO PIE CierreDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // TAB ::= TablaConBordeConAtributo ATG FinEtiqueta InicioDeTituloDeTablaConAtributo ATG FinEtiqueta Q FinDeTituloDeTabla CABEZA PIE CUERPO CierreDeTabla SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-12)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // TAB ::= TablaConBordeConAtributo ATG FinEtiqueta InicioDeTituloDeTablaConAtributo ATG FinEtiqueta Q FinDeTituloDeTabla CABEZA PIE CUERPO CierreDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // TAB ::= TablaConBorde InicioDeTituloDeTablaConAtributo ATG FinEtiqueta CABEZA PIE CierreDeTabla SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // TAB ::= TablaConBorde InicioDeTituloDeTablaConAtributo ATG FinEtiqueta CABEZA PIE CierreDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // TAB ::= TablaConBorde InicioDeTituloDeTablaConAtributo ATG FinEtiqueta CABEZA CUERPO CierreDeTabla SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // TAB ::= TablaConBorde InicioDeTituloDeTablaConAtributo ATG FinEtiqueta CABEZA CUERPO CierreDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // TAB ::= TablaConBorde InicioDeTituloDeTablaConAtributo ATG FinEtiqueta CABEZA CUERPO PIE CierreDeTabla SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // TAB ::= TablaConBorde InicioDeTituloDeTablaConAtributo ATG FinEtiqueta CABEZA CUERPO PIE CierreDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // TAB ::= TablaConBorde InicioDeTituloDeTablaConAtributo ATG FinEtiqueta CABEZA PIE CUERPO CierreDeTabla SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // TAB ::= TablaConBorde InicioDeTituloDeTablaConAtributo ATG FinEtiqueta CABEZA PIE CUERPO CierreDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // TAB ::= TablaConBorde CABEZA PIE CierreDeTabla SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // TAB ::= TablaConBorde InicioDeTituloDeTabla Q FinDeTituloDeTabla CABEZA PIE CierreDeTabla SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // TAB ::= TablaConBorde CABEZA PIE CierreDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // TAB ::= TablaConBorde InicioDeTituloDeTabla Q FinDeTituloDeTabla CABEZA PIE CierreDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // TAB ::= TablaConBorde CABEZA CUERPO CierreDeTabla SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // TAB ::= TablaConBorde InicioDeTituloDeTabla Q FinDeTituloDeTabla CABEZA CUERPO CierreDeTabla SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // TAB ::= TablaConBorde CABEZA CUERPO CierreDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // TAB ::= TablaConBorde InicioDeTituloDeTabla Q FinDeTituloDeTabla CABEZA CUERPO CierreDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // TAB ::= TablaConBorde CABEZA CUERPO PIE CierreDeTabla SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // TAB ::= TablaConBorde InicioDeTituloDeTabla Q FinDeTituloDeTabla CABEZA CUERPO PIE CierreDeTabla SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // TAB ::= TablaConBorde CABEZA CUERPO PIE CierreDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // TAB ::= TablaConBorde InicioDeTituloDeTabla Q FinDeTituloDeTabla CABEZA CUERPO PIE CierreDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // TAB ::= TablaConBorde CABEZA PIE CUERPO CierreDeTabla SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // TAB ::= TablaConBorde InicioDeTituloDeTabla Q FinDeTituloDeTabla CABEZA PIE CUERPO CierreDeTabla SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // TAB ::= TablaConBorde CABEZA PIE CUERPO CierreDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // TAB ::= TablaConBorde InicioDeTituloDeTabla Q FinDeTituloDeTabla CABEZA PIE CUERPO CierreDeTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TAB",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // ENLA ::= AperturaEtiquetaAconAtributo ATG AtributoHREF Url AtributoTARGET FinEtiqueta SENTENCIA CierreEtiquetaA SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENLA",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // ENLA ::= AperturaEtiquetaAconAtributo AtributoHREF Url AtributoTARGET FinEtiqueta SENTENCIA CierreEtiquetaA SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENLA",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // ENLA ::= AperturaEtiquetaAconAtributo ATG AtributoHREF Url AtributoTARGET FinEtiqueta SENTENCIA CierreEtiquetaA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENLA",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // ENLA ::= AperturaEtiquetaAconAtributo AtributoHREF Url AtributoTARGET FinEtiqueta SENTENCIA CierreEtiquetaA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENLA",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // ENLA ::= AperturaEtiquetaAconAtributo ATG AtributoHREF Url FinEtiqueta SENTENCIA CierreEtiquetaA SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENLA",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // ENLA ::= AperturaEtiquetaAconAtributo AtributoHREF Url FinEtiqueta SENTENCIA CierreEtiquetaA SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENLA",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // ENLA ::= AperturaEtiquetaAconAtributo ATG AtributoHREF Url FinEtiqueta SENTENCIA CierreEtiquetaA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENLA",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // ENLA ::= AperturaEtiquetaAconAtributo AtributoHREF Url FinEtiqueta SENTENCIA CierreEtiquetaA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENLA",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // U ::= ItemEnLaListaConAtributo VALUE FinEtiqueta SENTENCIA CierreDeItemEnLaLista U 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("U",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // U ::= ItemEnLaListaConAtributo VALUE FinEtiqueta SENTENCIA CierreDeItemEnLaLista 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("U",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // U ::= ItemEnLaLista SENTENCIA CierreDeItemEnLaLista U 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("U",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // U ::= ItemEnLaLista SENTENCIA CierreDeItemEnLaLista 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("U",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // LIST ::= AperturaListaDesordenada U CierreListaDesordenada 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LIST",13, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // LIST ::= AperturaListaDesordenada U CierreListaDesordenada SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LIST",13, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // LIST ::= AperturaListaDesordenadaConAtributo ATG FinEtiqueta U CierreListaDesordenada 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LIST",13, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // LIST ::= AperturaListaDesordenadaConAtributo ATG FinEtiqueta U CierreListaDesordenada SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LIST",13, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // LIST ::= AperturaDeListaOrdenadaConAtributo LATE FinEtiqueta U CierreDeListaOrdenada 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LIST",13, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // LIST ::= AperturaDeListaOrdenadaConAtributo LATE FinEtiqueta U CierreDeListaOrdenada SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LIST",13, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // LIST ::= AperturaDeListaOrdenada U CierreDeListaOrdenada SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LIST",13, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // LIST ::= AperturaDeListaOrdenada U CierreDeListaOrdenada 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LIST",13, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // LIST ::= AperturaDeListaOrdenadaConAtributo ATG FinEtiqueta U CierreDeListaOrdenada 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LIST",13, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // LIST ::= AperturaDeListaOrdenadaConAtributo ATG FinEtiqueta U CierreDeListaOrdenada SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LIST",13, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // LIST ::= AperturaDeListaOrdenadaConAtributo ATG LATE FinEtiqueta U CierreDeListaOrdenada 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LIST",13, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // LIST ::= AperturaDeListaOrdenadaConAtributo ATG LATE FinEtiqueta U CierreDeListaOrdenada SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LIST",13, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // TITU ::= AperturaTitulo6 texto CierreTitulo6 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITU",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // TITU ::= AperturaTitulo6 texto CierreTitulo6 SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITU",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // TITU ::= AperturaTitulo5 texto CierreTitulo5 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITU",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // TITU ::= AperturaTitulo5 texto CierreTitulo5 SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITU",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // TITU ::= AperturaTitulo4 texto CierreTitulo4 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITU",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // TITU ::= AperturaTitulo4 texto CierreTitulo4 SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITU",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // TITU ::= AperturaTitulo3 texto CierreTitulo3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITU",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // TITU ::= AperturaTitulo3 texto CierreTitulo3 SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITU",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // TITU ::= AperturaTitulo2 texto CierreTitulo2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITU",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // TITU ::= AperturaTitulo2 texto CierreTitulo2 SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITU",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // TITU ::= AperturaTitulo1 texto CierreTitulo1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITU",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // TITU ::= AperturaTitulo1 texto CierreTitulo1 SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITU",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // TITU ::= AperturaTitulo6ConAtributo ATG FinEtiqueta texto CierreTitulo6 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITU",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // TITU ::= AperturaTitulo6ConAtributo ATG FinEtiqueta texto CierreTitulo6 SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITU",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // TITU ::= AperturaTitulo5ConAtributo ATG FinEtiqueta texto CierreTitulo5 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITU",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // TITU ::= AperturaTitulo5ConAtributo ATG FinEtiqueta texto CierreTitulo5 SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITU",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // TITU ::= AperturaTitulo4ConAtributo ATG FinEtiqueta texto CierreTitulo4 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITU",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // TITU ::= AperturaTitulo4ConAtributo ATG FinEtiqueta texto CierreTitulo4 SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITU",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // TITU ::= AperturaTitulo3ConAtributo ATG FinEtiqueta texto CierreTitulo3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITU",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // TITU ::= AperturaTitulo3ConAtributo ATG FinEtiqueta texto CierreTitulo3 SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITU",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // TITU ::= AperturaTitulo2ConAtributo ATG FinEtiqueta texto CierreTitulo2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITU",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // TITU ::= AperturaTitulo2ConAtributo ATG FinEtiqueta texto CierreTitulo2 SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITU",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // TITU ::= AperturaTitulo1ConAtributo ATG FinEtiqueta texto CierreTitulo1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITU",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // TITU ::= AperturaTitulo1ConAtributo ATG FinEtiqueta texto CierreTitulo1 SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITU",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // PARR ::= InicioDeParrafo SENTENCIA FinDeParrafo 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARR",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // PARR ::= InicioDeParrafo SENTENCIA FinDeParrafo SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARR",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // PARR ::= InicioDeParrafoConAtributo ATG FinEtiqueta SENTENCIA FinDeParrafo 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARR",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // PARR ::= InicioDeParrafoConAtributo ATG FinEtiqueta SENTENCIA FinDeParrafo SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARR",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // SECCION ::= AperturaSeccionConAtributo ATG FinEtiqueta SENTENCIA CierreSeccion SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SECCION",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // SECCION ::= AperturaSeccionConAtributo ATG FinEtiqueta SENTENCIA CierreSeccion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SECCION",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // SECCION ::= AperturaSeccion SENTENCIA CierreSeccion SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SECCION",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // SECCION ::= AperturaSeccion SENTENCIA CierreSeccion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SECCION",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // IMGG ::= Imagen ATIMG FinEtiqueta 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMGG",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // IMGG ::= Imagen ATG ATIMG FinEtiqueta 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMGG",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // IMGG ::= Imagen ATIMG FinEtiqueta SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMGG",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // IMGG ::= Imagen ATG ATIMG FinEtiqueta SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMGG",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // DIVV ::= AperturaDivisionConAtributo ATG FinEtiqueta SENTENCIA CierreDivision 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DIVV",15, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // DIVV ::= AperturaDivision SENTENCIA CierreDivision 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DIVV",15, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // DIVV ::= AperturaDivisionConAtributo ATG FinEtiqueta SENTENCIA CierreDivision SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DIVV",15, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // DIVV ::= AperturaDivision SENTENCIA CierreDivision SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DIVV",15, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // ATIMG4 ::= Atributowidth 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ATIMG4",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // ATIMG3 ::= Atributoheight 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ATIMG3",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // ATIMG2 ::= Atributoheight Atributowidth 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ATIMG2",23, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // ATIMG2 ::= Atributowidth Atributoheight 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ATIMG2",23, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // ATIMG ::= ATIMG4 Atributosrc ATIMG3 alt 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ATIMG",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // ATIMG ::= ATIMG4 Atributosrc alt ATIMG3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ATIMG",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // ATIMG ::= ATIMG4 alt Atributosrc ATIMG3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ATIMG",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // ATIMG ::= ATIMG4 alt ATIMG3 Atributosrc 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ATIMG",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // ATIMG ::= ATIMG4 alt Atributosrc 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ATIMG",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // ATIMG ::= ATIMG4 Atributosrc ATIMG3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ATIMG",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // ATIMG ::= ATIMG4 Atributosrc alt 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ATIMG",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // ATIMG ::= ATIMG4 Atributosrc 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ATIMG",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // ATIMG ::= ATIMG3 Atributosrc ATIMG4 alt 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ATIMG",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // ATIMG ::= ATIMG3 Atributosrc alt ATIMG4 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ATIMG",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // ATIMG ::= ATIMG3 alt Atributosrc ATIMG4 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ATIMG",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // ATIMG ::= ATIMG3 alt ATIMG4 Atributosrc 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ATIMG",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // ATIMG ::= ATIMG3 alt Atributosrc 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ATIMG",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // ATIMG ::= ATIMG3 Atributosrc ATIMG4 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ATIMG",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // ATIMG ::= ATIMG3 Atributosrc alt 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ATIMG",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // ATIMG ::= ATIMG3 Atributosrc 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ATIMG",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // ATIMG ::= ATIMG2 alt Atributosrc 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ATIMG",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // ATIMG ::= ATIMG2 Atributosrc alt 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ATIMG",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // ATIMG ::= ATIMG2 Atributosrc 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ATIMG",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // ATIMG ::= alt ATIMG3 Atributosrc ATIMG4 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ATIMG",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // ATIMG ::= alt ATIMG4 Atributosrc 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ATIMG",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // ATIMG ::= alt ATIMG3 Atributosrc 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ATIMG",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // ATIMG ::= alt ATIMG2 Atributosrc 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ATIMG",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // ATIMG ::= alt Atributosrc ATIMG4 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ATIMG",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // ATIMG ::= alt Atributosrc ATIMG3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ATIMG",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // ATIMG ::= alt Atributosrc ATIMG2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ATIMG",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // ATIMG ::= alt Atributosrc 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ATIMG",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // ATIMG ::= Atributosrc alt ATIMG3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ATIMG",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // ATIMG ::= Atributosrc alt ATIMG4 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ATIMG",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // ATIMG ::= Atributosrc alt ATIMG2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ATIMG",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // ATIMG ::= Atributosrc ATIMG4 alt 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ATIMG",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // ATIMG ::= Atributosrc ATIMG3 alt 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ATIMG",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // ATIMG ::= Atributosrc ATIMG2 alt 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ATIMG",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // ATIMG ::= Atributosrc ATIMG2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ATIMG",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // ATIMG ::= Atributosrc ATIMG4 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ATIMG",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // ATIMG ::= Atributosrc ATIMG3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ATIMG",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // ATIMG ::= Atributosrc alt 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ATIMG",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // ATIMG ::= Atributosrc 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ATIMG",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // Q ::= InicioResaltadoMark QUE FinResaltadoMark Q 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Q",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // Q ::= InicioResaltadoMark QUE FinResaltadoMark 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Q",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // Q ::= texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Q",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // Q ::= EspacioVacio 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Q",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // Q ::= texto Q 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Q",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // Q ::= EspacioVacio Q 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Q",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // Q ::= InicioResaltadoMarkConAtributo ATG FinEtiqueta texto FinResaltadoMark 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Q",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // Q ::= InicioResaltadoMark texto FinResaltadoMark 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Q",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // Q ::= InicioResaltadoMarkConAtributo ATG FinEtiqueta texto FinResaltadoMark Q 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Q",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // Q ::= InicioResaltadoMark texto FinResaltadoMark Q 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Q",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // Q ::= InicioResaltadoEmConAtributo ATG FinEtiqueta texto FinResaltadoEm 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Q",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // Q ::= InicioResaltadoEm texto FinResaltadoEm 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Q",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // Q ::= InicioResaltadoEmConAtributo ATG FinEtiqueta texto FinResaltadoEm Q 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Q",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // Q ::= InicioResaltadoEm texto FinResaltadoEm Q 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Q",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // Q ::= InicioMarcadoConEnfasisConAtributo ATG FinEtiqueta texto FinMarcadoConEnfasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Q",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // Q ::= InicioMarcadoConEnfasis texto FinMarcadoConEnfasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Q",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // Q ::= InicioMarcadoConEnfasisConAtributo ATG FinEtiqueta texto FinMarcadoConEnfasis Q 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Q",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // Q ::= InicioMarcadoConEnfasis texto FinMarcadoConEnfasis Q 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Q",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // QUE ::= InicioMarcadoConEnfasis texto FinMarcadoConEnfasis QUE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUE",24, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // QUE ::= InicioMarcadoConEnfasis texto FinMarcadoConEnfasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUE",24, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // Lambda ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Lambda",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // SENTENCIA ::= InicioResaltadoMark QUE FinResaltadoMark SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // SENTENCIA ::= InicioResaltadoMark QUE FinResaltadoMark 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // SENTENCIA ::= texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // SENTENCIA ::= EspacioVacio 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // SENTENCIA ::= texto SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // SENTENCIA ::= EspacioVacio SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // SENTENCIA ::= InicioResaltadoMarkConAtributo ATG FinEtiqueta texto FinResaltadoMark 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // SENTENCIA ::= InicioResaltadoMark texto FinResaltadoMark 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // SENTENCIA ::= InicioResaltadoMarkConAtributo ATG FinEtiqueta texto FinResaltadoMark SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // SENTENCIA ::= InicioResaltadoMark texto FinResaltadoMark SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // SENTENCIA ::= InicioResaltadoEmConAtributo ATG FinEtiqueta texto FinResaltadoEm 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // SENTENCIA ::= InicioResaltadoEm texto FinResaltadoEm 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // SENTENCIA ::= InicioResaltadoEmConAtributo ATG FinEtiqueta texto FinResaltadoEm SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // SENTENCIA ::= InicioResaltadoEm texto FinResaltadoEm SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // SENTENCIA ::= InicioMarcadoConEnfasisConAtributo ATG FinEtiqueta texto FinMarcadoConEnfasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // SENTENCIA ::= InicioMarcadoConEnfasis texto FinMarcadoConEnfasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // SENTENCIA ::= InicioMarcadoConEnfasisConAtributo ATG FinEtiqueta texto FinMarcadoConEnfasis SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // SENTENCIA ::= InicioMarcadoConEnfasis texto FinMarcadoConEnfasis SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // SENTENCIA ::= SaltoDeLinea 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // SENTENCIA ::= UnaLineaHorizontal 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // SENTENCIA ::= SaltoDeLinea SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // SENTENCIA ::= UnaLineaHorizontal SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // SENTENCIA ::= TAB 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // SENTENCIA ::= DIVV 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // SENTENCIA ::= IMGG 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // SENTENCIA ::= LIST 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // SENTENCIA ::= ENLA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // SENTENCIA ::= SECCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // SENTENCIA ::= TITU 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // SENTENCIA ::= PARR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // CUER ::= AperturaBodyConAtributo ATG FinEtiqueta SENTENCIA CierreBody 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CUER",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // CUER ::= AperturaBody SENTENCIA CierreBody 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CUER",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // TIT ::= AperturaTitleConAtributo ATG FinEtiqueta texto CierreTitulo 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TIT",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // TIT ::= AperturaTitle texto CierreTitulo 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TIT",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // J ::= AperturaMetaNameConAtributo 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("J",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // J ::= AperturaMetaName 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("J",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // J ::= AperturaMetaNameConAtributo J 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("J",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // J ::= AperturaMetaName J 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("J",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // F ::= AperturaLibreriaHTML 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("F",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // F ::= AperturaLibreriaHTML J 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("F",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // CAB ::= AperturaHead TIT F CierreHead 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CAB",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // CAB ::= AperturaHead F TIT CierreHead 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CAB",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // LENG ::= Lambda 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LENG",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // LENG ::= AperturaDeIdiomaHTML CAB CUER 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LENG",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // INICIO ::= InicioDocumento LENG CierreDeDocumento 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INICIO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= INICIO EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).value;
		RESULT = start_val;
              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$Sintax$parser.done_parsing();
          return CUP$Sintax$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

